<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="1/31/2023 12:02:46 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="GATB-WIN-NUC"
  DTS:CreatorName="GATB-WIN-NUC\devat"
  DTS:DTSID="{C11A0D3C-ADDB-4EED-907E-F65478C4816A}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.5035.3"
  DTS:LocaleID="1033"
  DTS:ObjectName="Package"
  DTS:PackageType="5"
  DTS:VersionBuild="175"
  DTS:VersionGUID="{66FCDA5A-8DF1-4B70-A227-38D084F1EAA8}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[LocalHost.EMFO_225]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{C28E9A39-B692-4954-9637-32421754F3EC}"
      DTS:ObjectName="LocalHost.EMFO_225">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=.;Initial Catalog=EMFO_225;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;Application Name=SSIS-Package-{C28E9A39-B692-4954-9637-32421754F3EC}LocalHost.EMFO_225;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[SMTP Connection Manager]"
      DTS:CreationName="SMTP"
      DTS:DTSID="{DBF43897-EBDC-42C5-B91B-39DCFB1B0DBD}"
      DTS:ObjectName="SMTP Connection Manager">
      <DTS:ObjectData>
        <SmtpConnectionManager
          ConnectionString="SmtpServer=smtp.gmail.com;UseWindowsAuthentication=False;EnableSsl=False;"
          ConnectByProxy="False" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[two]"
      DTS:CreationName="FILE"
      DTS:DTSID="{B2330B0D-6428-4199-BD72-3684CF7A367F}"
      DTS:ObjectName="two">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:FileUsageType="2"
          DTS:ConnectionString="C:\Files\testZIP\two" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[XMLZIPPED]"
      DTS:CreationName="FILE"
      DTS:DTSID="{C2124943-03A9-4DFC-81F5-38744D206E40}"
      DTS:ObjectName="XMLZIPPED">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:FileUsageType="2"
          DTS:ConnectionString="C:\Files\XMLZIPPED" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{49DCFBF6-F66A-48D7-B220-C8C8DD1051B1}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="ErrorCounter">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{448B8234-F20F-4537-B544-4FDAB185E5B4}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ErrorPath">
      <DTS:VariableValue
        DTS:DataType="8">C:\Files\XML_Error</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{BFE368BB-224C-4547-B735-794B55498A62}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::XmlFileName]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FileA">
      <DTS:VariableValue
        DTS:DataType="8">C:\Files\XMLZIPPED\.xml</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{08770F1A-65C9-4FB1-BE3B-5C9681795144}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::FileComparePath] + &quot;\\&quot; +  @[User::FileName] + &quot;.xml&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FileB">
      <DTS:VariableValue
        DTS:DataType="8">C:\Files\XML_Compare\.xml</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{8A61320C-B451-4B7A-959C-A5E0D88F4F18}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::FileComparePath] + &quot;\\&quot; + &quot;test.xml&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FileC">
      <DTS:VariableValue
        DTS:DataType="8">C:\Files\XML_Compare\test.xml</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{59F6A346-F998-46F4-A3CC-6D78AD912FF8}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FileComparePath">
      <DTS:VariableValue
        DTS:DataType="8">C:\Files\XML_Compare</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{475E310B-0D26-4AEC-B4C1-7BFD5EF39867}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FileName">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{7DA00E07-2A10-4C3F-B192-0ED18D0142B3}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FilePath">
      <DTS:VariableValue
        DTS:DataType="8">C:\Files\XMLZIPPED</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{53BE8738-C6EB-47B1-891E-D758602FB424}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SuccessPath">
      <DTS:VariableValue
        DTS:DataType="8">C:\Files\XML_Complete</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{8AB79ACD-1497-47EA-AFC4-F0EA90F0A069}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Unzip_Password">
      <DTS:VariableValue
        DTS:DataType="8">1234</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F1C2FBA8-F257-4293-827F-D8F12B87406E}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varExePath">
      <DTS:VariableValue
        DTS:DataType="8">C:\Files\x64\7za.exe</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{9A74211A-B1F5-4554-B2A9-AE93123957A1}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="Variable">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{99E4DE6D-47AF-4357-941D-CAE38C7CF77E}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::FilePath] + &quot;\\&quot; + @[User::FileName] + &quot;.xml&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="XmlFileName">
      <DTS:VariableValue
        DTS:DataType="8">C:\Files\XMLZIPPED\.xml</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{0187E982-460D-4EB0-BE97-2F7FEC5B3E17}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::FilePath] + &quot;\\&quot; + @[User::FileName] + &quot;.zip&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ZipFileName">
      <DTS:VariableValue
        DTS:DataType="8">C:\Files\XMLZIPPED\.zip</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Foreach Zip"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:DelayValidation="True"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{0D4A2D34-5E6A-40FB-AAF5-313F0AFA1D51}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:MaxErrorCount="0"
      DTS:ObjectName="Foreach Zip">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachFileEnumerator"
        DTS:DTSID="{B3F7F9E2-C795-45B4-9B6D-BF50EC777C17}"
        DTS:ObjectName="{B3F7F9E2-C795-45B4-9B6D-BF50EC777C17}">
        <DTS:PropertyExpression
          DTS:Name="Directory">@[User::FilePath]</DTS:PropertyExpression>
        <DTS:ObjectData>
          <ForEachFileEnumeratorProperties>
            <FEFEProperty
              Folder="C:\Files\XMLZIPPED" />
            <FEFEProperty
              FileSpec="*_DayEnd_*.zip" />
            <FEFEProperty
              FileNameRetrievalType="2" />
            <FEFEProperty
              Recurse="0" />
          </ForEachFileEnumeratorProperties>
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Foreach Zip\Delete XML"
          DTS:CreationName="Microsoft.FileSystemTask"
          DTS:DelayValidation="True"
          DTS:Description="File System Task"
          DTS:DTSID="{853C1EC6-7684-4A3E-A06B-5658711313DC}"
          DTS:ExecutableType="Microsoft.FileSystemTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Delete XML"
          DTS:TaskContact="File System Task;Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:ObjectData>
            <FileSystemData
              TaskOperationType="DeleteFile"
              TaskSourcePath="User::XmlFileName"
              TaskIsSourceVariable="True" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Zip\Error Counter"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{7ACD9FB7-00DB-4014-A1A1-0625D4B8BA67}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Error Counter"
          DTS:ThreadHint="2">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_15658c38b6ff4d4ba226aec281716cf0"
              VSTAMajorVersion="16"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadWriteVariables="User::ErrorCounter">
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="ST_15658c38b6ff4d4ba226aec281716cf0.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{27a1dd44-9c62-4f3b-ab69-60fd9fce15a5}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_15658c38b6ff4d4ba226aec281716cf0</RootNamespace>
    <AssemblyName>ST_15658c38b6ff4d4ba226aec281716cf0</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
#endregion

namespace ST_15658c38b6ff4d4ba226aec281716cf0
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // TODO: Add your code here
            int errorCount = (int)Dts.Variables["User::ErrorCounter"].Value;
            errorCount++;
            Dts.Variables["User::ErrorCounter"].Value = errorCount;
            int errorCount2 = (int)Dts.Variables["User::ErrorCounter"].Value;
            Dts.TaskResult = (int)ScriptResults.Success;
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_15658c38b6ff4d4ba226aec281716cf0</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_15658c38b6ff4d4ba226aec281716cf0</msb:DisplayName>
    <msb:ProjectId>{33AD7AC7-9E11-4A36-9901-EE6F8E1923A9}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_15658c38b6ff4d4ba226aec281716cf0.csproj" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_15658c38b6ff4d4ba226aec281716cf0.Properties.Settings.get_Default():ST_15658c38b6ff4d4ba226aec281716cf0.Properties.Sett" +
    "ings")]

namespace ST_15658c38b6ff4d4ba226aec281716cf0.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_15658c38b6ff4d4ba226aec281716cf0")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_15658c38b6ff4d4ba226aec281716cf0")]
[assembly: AssemblyCopyright("Copyright @  2023")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_15658c38b6ff4d4ba226aec281716cf0.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_15658c38b6ff4d4ba226aec281716cf0.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_15658c38b6ff4d4ba226aec281716cf0.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_15658c38b6ff4d4ba226aec281716cf0.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_15658c38b6ff4d4ba226aec281716cf0.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_15658c38b6ff4d4ba226aec281716cf0.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAH943GMAAAAAAAAAAOAAIiALATAAAA4AAAAIAAAAAAAA4i0A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAJAtAABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA6A0AAAAgAAAADgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAAQAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAFgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADE
LQAAAAAAAEgAAAACAAUANCEAAKQLAAABAAAAAAAAANgsAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwAgBxAAAAAQAAEQIoEAAACm8RAAAKcgEAAHBvEgAACm8T
AAAKpRsAAAEKBhdYCgIoEAAACm8RAAAKcgEAAHBvEgAACgaMGwAAAW8UAAAKAigQAAAKbxEAAApy
AQAAcG8SAAAKbxMAAAqlGwAAASYCKBAAAAoWbxUAAAoqHgIoFgAACioeAigXAAAKKq5+AQAABC0e
cicAAHDQAwAAAigYAAAKbxkAAApzGgAACoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAE
Kh4CKBsAAAoqLnMIAAAGgAMAAAQqAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAA
AMQDAAAjfgAAMAQAAGQFAAAjU3RyaW5ncwAAAACUCQAAnAAAACNVUwAwCgAAEAAAACNHVUlEAAAA
QAoAAGQBAAAjQmxvYgAAAAAAAAACAAABVx2iAQkDAAAA+gEzABYAAAEAAAAeAAAABQAAAAYAAAAJ
AAAAAQAAABsAAAACAAAAEAAAAAEAAAACAAAAAwAAAAQAAAABAAAABAAAAAEAAAABAAAAAAB8AwEA
AAAAAAYAKwJMBAYAugJMBAYAdwE5BA8AwAQAAAYApAH6AwYADgL6AwYA7wH6AwYAoQL6AwYASwL6
AwYAZAL6AwYAuwH6AwYA1gHyAgoAfwIrAwoA9gArAwYAtAOtAwYAWgE5BAYAMwWtAwYAHARsBAYA
DATlAw4AKgFmAw4AiwFmAw4AEgHQAwYAPwFMBAoAVAMrAxIAAgWhABIAdAChAAYAJQCtAwYAwQCt
AwYAfQCtAwYAWQX6AwAAAAArAAAAAAABAAEAAQAQAMUDAQA5AAEAAQAAABAAcwTPBEUAAQADAAAB
EAAMBc8EWQADAAcAAwEAACUFAAA9AAQACgARALkDZwARAOYAawARAGQAbwAGBlMAcwBWgBUFdgBW
gMYAdgBQIAAAAACGAMsDBgABAM0gAAAAAIYYLAQGAAEA1SAAAAAAgxgsBAYAAQDdIAAAAACTCBgE
egABAAkhAAAAAJMIzgB/AAEAECEAAAAAkwjaAIQAAQAYIQAAAACWCDoFigACAB8hAAAAAIYYLAQG
AAIAJyEAAAAAkRgyBI8AAgAAAAEA7AIJACwEAQARACwEBgAZACwECgApACwEEAAxACwEEAA5ACwE
EABBACwEEABJACwEEABRACwEEABZACwEEABhACwEEABpACwEBgCBACwEBgCpACwEFQC5ACwEBgBx
AB0FHwDBAP4EJADJAKQDKQDRANgCLwDRAOICMwDBAEYFAQBxACwEBgCJACwEBgDhAI8AOADhAFUF
PwCRACwERACxACwEBgAIABQAXQAIABgAYgApAHMAygAuAAsAogAuABMAqwAuABsAygAuACMA0wAu
ACsA/AAuADMA/AAuADsA/AAuAEMA0wAuAEsAAgEuAFMA/AAuAFsAGQFDAGMAYgBJAHMAygBhAHsA
YgBjAGsAYgAbAAMAAQAEAAMAAAAcBJMAAADuAJgAAAA+BZ0AAgAEAAMAAgAFAAUAAQAGAAUAAgAH
AAcABIAAAAEAAADyIDdGAAAAAAAAAQAAAAQAAAAAAAAAAAAAAEsAWwAAAAAAEAAAAAAAAAAAAAAA
VAAMAwAAAAAEAAAAAAAAAAAAAABLAK0DAAAAABAAAAAAAAAAAAAAAFQANAAAAAAAAAAAAAEAAAB9
BAAABQACAAAAAAAAU1RfMTU2NThjMzhiNmZmNGQ0YmEyMjZhZWMyODE3MTZjZjAASW50MzIAPE1v
ZHVsZT4ATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAHZhbHVlX18AbXNjb3JsaWIAZGVm
YXVsdEluc3RhbmNlAFZhcmlhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxl
AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAVHlwZQBGYWlsdXJlAGdldF9DdWx0dXJl
AHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UA
QXBwbGljYXRpb25TZXR0aW5nc0Jhc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5l
cmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0
cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFz
c2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJs
eUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21w
aWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3Nl
bWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUA
QXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAGdl
dF9WYWx1ZQBzZXRfVmFsdWUAdmFsdWUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBNaWNyb3Nv
ZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2Ny
aXB0VGFzawBTY3JpcHRPYmplY3RNb2RlbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU1RfMTU2NThj
MzhiNmZmNGQ0YmEyMjZhZWMyODE3MTZjZjAuZGxsAGdldF9JdGVtAFN5c3RlbQBFbnVtAHJlc291
cmNlTWFuAFNjcmlwdE1haW4AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRp
b24AU3lzdGVtLlJlZmxlY3Rpb24AQ3VsdHVyZUluZm8AZ2V0X1Jlc291cmNlTWFuYWdlcgAuY3Rv
cgAuY2N0b3IAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2Vydmlj
ZXMAU3lzdGVtLlJlc291cmNlcwBTVF8xNTY1OGMzOGI2ZmY0ZDRiYTIyNmFlYzI4MTcxNmNmMC5Q
cm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU1RfMTU2NThjMzhi
NmZmNGQ0YmEyMjZhZWMyODE3MTZjZjAuUHJvcGVydGllcwBnZXRfVmFyaWFibGVzAFNldHRpbmdz
AFN1Y2Nlc3MAZ2V0X0R0cwBTY3JpcHRSZXN1bHRzAE9iamVjdABnZXRfRGVmYXVsdABzZXRfVGFz
a1Jlc3VsdABnZXRfQXNzZW1ibHkAAAAAJVUAcwBlAHIAOgA6AEUAcgByAG8AcgBDAG8AdQBuAHQA
ZQByAABxUwBUAF8AMQA1ADYANQA4AGMAMwA4AGIANgBmAGYANABkADQAYgBhADIAMgA2AGEAZQBj
ADIAOAAxADcAMQA2AGMAZgAwAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMA
ZQBzAAAAAAAMJyGK8wRxRrX2rk3S4bfHAAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFRAwcBCAQg
ABJhBCAAEmUFIAESaRwDIAAcBCABARwGAAEScRF1BCAAEnkGIAIBDhJ5CLd6XFYZNOCJCImEXc2A
gMyRBAAAAAAEAQAAAAMGEkkDBhJNAwYSEAIGCAMGERQEAAASSQQAABJNBQABARJNBAAAEhADAAAB
BAgAEkkECAASTQQIABIQCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgB
AAIAAAAAACgBACNTVF8xNTY1OGMzOGI2ZmY0ZDRiYTIyNmFlYzI4MTcxNmNmMAAABQEAAAAAFgEA
EUNvcHlyaWdodCBAICAyMDIzAABJAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjcBAFQOFEZy
YW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3b3JrIDQuNwC0AAAAzsrvvgEAAACRAAAAbFN5
c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAs
IEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0u
UmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAuC0AAAAA
AAAAAAAA0i0AAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMQtAAAAAAAAAAAAAAAAX0NvckRsbE1h
aW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAA
AAAASAAAAFhAAAAaBAAAAAAAAAAAAAAaBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYA
TwAAAAAAvQTv/gAAAQAAAAEAN0byIAAAAQA3RvIgPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAA
AEQAAAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkA
bwBuAAAAAAAAALAEegMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVgMAAAEAMAAw
ADAAMAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAA
YQBuAHkATgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBu
AAAAAABTAFQAXwAxADUANgA1ADgAYwAzADgAYgA2AGYAZgA0AGQANABiAGEAMgAyADYAYQBlAGMA
MgA4ADEANwAxADYAYwBmADAAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAw
AC4AOAA0ADMANAAuADEANwA5ADcANQAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUA
AABTAFQAXwAxADUANgA1ADgAYwAzADgAYgA2AGYAZgA0AGQANABiAGEAMgAyADYAYQBlAGMAMgA4
ADEANwAxADYAYwBmADAALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgA
dAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADIAMwAAACoAAQABAEwAZQBnAGEAbABU
AHIAYQBkAGUAbQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUA
bgBhAG0AZQAAAFMAVABfADEANQA2ADUAOABjADMAOABiADYAZgBmADQAZAA0AGIAYQAyADIANgBh
AGUAYwAyADgAMQA3ADEANgBjAGYAMAAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEA
bQBlAAAAAABTAFQAXwAxADUANgA1ADgAYwAzADgAYgA2AGYAZgA0AGQANABiAGEAMgAyADYAYQBl
AGMAMgA4ADEANwAxADYAYwBmADAAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4A
AAAxAC4AMAAuADgANAAzADQALgAxADcAOQA3ADUAAAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAg
AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADgANAAzADQALgAxADcAOQA3ADUAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAMAAAA5D0A
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Zip\Move failed Zip"
          DTS:CreationName="Microsoft.FileSystemTask"
          DTS:DelayValidation="True"
          DTS:Description="File System Task"
          DTS:DTSID="{647572ad-7c96-4fa4-a8b9-c7fe2e87a402}"
          DTS:ExecutableType="Microsoft.FileSystemTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Move failed Zip"
          DTS:TaskContact="File System Task;Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="2">
          <DTS:Variables />
          <DTS:ObjectData>
            <FileSystemData
              TaskOperationType="MoveFile"
              TaskOverwriteDestFile="True"
              TaskSourcePath="User::ZipFileName"
              TaskIsSourceVariable="True"
              TaskDestinationPath="User::ErrorPath"
              TaskIsDestinationVariable="True" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Zip\Move finished Zip"
          DTS:CreationName="Microsoft.FileSystemTask"
          DTS:DelayValidation="True"
          DTS:Description="File System Task"
          DTS:DTSID="{C9CE3A1A-8A87-45D0-951A-E37715A685BE}"
          DTS:ExecutableType="Microsoft.FileSystemTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Move finished Zip"
          DTS:TaskContact="File System Task;Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="3">
          <DTS:Variables />
          <DTS:ObjectData>
            <FileSystemData
              TaskOperationType="MoveFile"
              TaskOverwriteDestFile="True"
              TaskSourcePath="User::ZipFileName"
              TaskIsSourceVariable="True"
              TaskDestinationPath="User::SuccessPath"
              TaskIsDestinationVariable="True" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Zip\Sequence Container"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:DTSID="{440622E1-2F3C-407A-A05C-9B0967086EE0}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="-1"
          DTS:ObjectName="Sequence Container"
          DTS:TransactionOption="2">
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Foreach Zip\Sequence Container\Import DB"
              DTS:CreationName="Microsoft.Pipeline"
              DTS:DelayValidation="True"
              DTS:Description="Data Flow Task"
              DTS:DTSID="{039281ce-6b82-4f5e-8f22-f36e716d0be5}"
              DTS:ExecutableType="Microsoft.Pipeline"
              DTS:LocaleID="-1"
              DTS:ObjectName="Import DB"
              DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:PropertyExpression
                DTS:Name="[XML Source].[XMLData]">@[User::XmlFileName]</DTS:PropertyExpression>
              <DTS:ObjectData>
                <pipeline
                  version="1">
                  <components>
                    <component
                      refId="Package\Foreach Zip\Sequence Container\Import DB\Conditional Split"
                      componentClassID="Microsoft.ConditionalSplit"
                      contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                      name="Conditional Split"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Foreach Zip\Sequence Container\Import DB\Conditional Split.Inputs[Conditional Split Input]"
                          description="Input to the Conditional Split Transformation"
                          name="Conditional Split Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\Conditional Split.Inputs[Conditional Split Input].Columns[scard_group]"
                              cachedDataType="wstr"
                              cachedLength="255"
                              cachedName="scard_group"
                              lineageId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_Scard_Detail].Columns[scard_group]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Foreach Zip\Sequence Container\Import DB\Conditional Split.Outputs[filter10-TIRES]"
                          description="Output 2 of the Conditional Split Transformation"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          exclusionGroup="1"
                          name="filter10-TIRES"
                          synchronousInputId="Package\Foreach Zip\Sequence Container\Import DB\Conditional Split.Inputs[Conditional Split Input]"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                              name="Expression">#{Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_Scard_Detail].Columns[scard_group]} == "10-TIRES" &amp;&amp; ![ISNULL](#{Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_Scard_Detail].Columns[scard_group]})</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the friendly version of the expression. This expression version uses column names."
                              expressionType="Notify"
                              name="FriendlyExpression">scard_group == "10-TIRES" &amp;&amp; !ISNULL(scard_group)</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                              name="EvaluationOrder">0</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Foreach Zip\Sequence Container\Import DB\Conditional Split.Outputs[Conditional Split Default Output]"
                          description="Default Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          name="Conditional Split Default Output"
                          synchronousInputId="Package\Foreach Zip\Sequence Container\Import DB\Conditional Split.Inputs[Conditional Split Input]">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              name="IsDefaultOut">true</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Foreach Zip\Sequence Container\Import DB\Conditional Split.Outputs[Conditional Split Error Output]"
                          description="Error Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Conditional Split Error Output"
                          synchronousInputId="Package\Foreach Zip\Sequence Container\Import DB\Conditional Split.Inputs[Conditional Split Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Foreach Zip\Sequence Container\Import DB\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Foreach Zip\Sequence Container\Import DB\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Foreach Zip\Sequence Container\Import DB\Conditional Split 1"
                      componentClassID="Microsoft.ConditionalSplit"
                      contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                      name="Conditional Split 1"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Foreach Zip\Sequence Container\Import DB\Conditional Split 1.Inputs[Conditional Split Input]"
                          description="Input to the Conditional Split Transformation"
                          name="Conditional Split Input">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Foreach Zip\Sequence Container\Import DB\Conditional Split 1.Outputs[Conditional Split Default Output]"
                          description="Default Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          name="Conditional Split Default Output"
                          synchronousInputId="Package\Foreach Zip\Sequence Container\Import DB\Conditional Split 1.Inputs[Conditional Split Input]">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              name="IsDefaultOut">true</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Foreach Zip\Sequence Container\Import DB\Conditional Split 1.Outputs[Conditional Split Error Output]"
                          description="Error Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Conditional Split Error Output"
                          synchronousInputId="Package\Foreach Zip\Sequence Container\Import DB\Conditional Split 1.Inputs[Conditional Split Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\Conditional Split 1.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Foreach Zip\Sequence Container\Import DB\Conditional Split 1.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\Conditional Split 1.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Foreach Zip\Sequence Container\Import DB\Conditional Split 1.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Foreach Zip\Sequence Container\Import DB\Lookup"
                      componentClassID="Microsoft.Lookup"
                      contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                      description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                      name="Lookup"
                      usesDispositions="true"
                      version="6">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the SQL statement that generates the lookup table."
                          expressionType="Notify"
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from [dbo].[ST_ArHeader_dayend]</property>
                        <property
                          dataType="System.String"
                          description="Specifies a SQL statement that uses parameters to generate the lookup table."
                          expressionType="Notify"
                          name="SqlCommandParam"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select * from [dbo].[ST_ArHeader_dayend]) [refTable]
where [refTable].[icard_id] = ? and [refTable].[DealerCode] = ? and [refTable].[branch_no] = ? and [refTable].[branch_name] = ? and [refTable].[doc_no] = ? and [refTable].[doc_date] = ? and [refTable].[ref_docno] = ? and [refTable].[doc_cancel] = ?</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of connection used to access the reference dataset."
                          name="ConnectionType"
                          typeConverter="LookupConnectionType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the cache type of the lookup table."
                          name="CacheType"
                          typeConverter="CacheType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                          name="NoMatchBehavior"
                          typeConverter="LookupNoMatchBehavior">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                          name="NoMatchCachePercentage">0</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                          name="MaxMemoryUsage">25</property>
                        <property
                          dataType="System.Int64"
                          description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                          name="MaxMemoryUsage64">25</property>
                        <property
                          dataType="System.String"
                          description="Indicates whether to reference metadata in an XML format."
                          name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="id" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="branch_name" dataType="DT_WSTR" length="255" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="doc_no" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="doc_date" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="DealerCode" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="branch_no" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="icard_id" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="ref_docno" dataType="DT_WSTR" length="120" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="doc_cancel" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="status_dayend" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="ExpirationDate" dataType="DT_DBTIMESTAMP" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                          name="ParameterMap">#{Package\Foreach Zip\Sequence Container\Import DB\247:invalid};#{Package\Foreach Zip\Sequence Container\Import DB\248:invalid};#{Package\Foreach Zip\Sequence Container\Import DB\249:invalid};#{Package\Foreach Zip\Sequence Container\Import DB\250:invalid};#{Package\Foreach Zip\Sequence Container\Import DB\251:invalid};#{Package\Foreach Zip\Sequence Container\Import DB\252:invalid};#{Package\Foreach Zip\Sequence Container\Import DB\253:invalid};#{Package\Foreach Zip\Sequence Container\Import DB\254:invalid};</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                          name="TreatDuplicateKeysAsError">false</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Foreach Zip\Sequence Container\Import DB\Lookup.Connections[OleDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[LocalHost.EMFO_225]"
                          connectionManagerRefId="Package.ConnectionManagers[LocalHost.EMFO_225]"
                          description="Connection manager used to access lookup data."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Foreach Zip\Sequence Container\Import DB\Lookup.Inputs[Lookup Input]"
                          name="Lookup Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\Lookup.Inputs[Lookup Input].Columns[icard_id]"
                              cachedDataType="wstr"
                              cachedLength="255"
                              cachedName="icard_id"
                              lineageId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_ArHeader].Columns[icard_id]">
                              <properties>
                                <property
                                  dataType="System.String"
                                  description="Specifies the column in the reference table that a column joins."
                                  name="JoinToReferenceColumn">icard_id</property>
                                <property
                                  dataType="System.Null"
                                  description="Specifies the column in the reference table from which a column is copied."
                                  name="CopyFromReferenceColumn" />
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\Lookup.Inputs[Lookup Input].Columns[DealerCode]"
                              cachedDataType="wstr"
                              cachedLength="255"
                              cachedName="DealerCode"
                              lineageId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_ArHeader].Columns[DealerCode]">
                              <properties>
                                <property
                                  dataType="System.String"
                                  description="Specifies the column in the reference table that a column joins."
                                  name="JoinToReferenceColumn">DealerCode</property>
                                <property
                                  dataType="System.Null"
                                  description="Specifies the column in the reference table from which a column is copied."
                                  name="CopyFromReferenceColumn" />
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\Lookup.Inputs[Lookup Input].Columns[Branch_no]"
                              cachedDataType="wstr"
                              cachedLength="255"
                              cachedName="Branch_no"
                              lineageId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_ArHeader].Columns[Branch_no]">
                              <properties>
                                <property
                                  dataType="System.String"
                                  description="Specifies the column in the reference table that a column joins."
                                  name="JoinToReferenceColumn">branch_no</property>
                                <property
                                  dataType="System.Null"
                                  description="Specifies the column in the reference table from which a column is copied."
                                  name="CopyFromReferenceColumn" />
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\Lookup.Inputs[Lookup Input].Columns[Branch_Name]"
                              cachedDataType="wstr"
                              cachedLength="255"
                              cachedName="Branch_Name"
                              lineageId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_ArHeader].Columns[Branch_Name]">
                              <properties>
                                <property
                                  dataType="System.String"
                                  description="Specifies the column in the reference table that a column joins."
                                  name="JoinToReferenceColumn">branch_name</property>
                                <property
                                  dataType="System.Null"
                                  description="Specifies the column in the reference table from which a column is copied."
                                  name="CopyFromReferenceColumn" />
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\Lookup.Inputs[Lookup Input].Columns[doc_no]"
                              cachedDataType="wstr"
                              cachedLength="255"
                              cachedName="doc_no"
                              lineageId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_ArHeader].Columns[doc_no]">
                              <properties>
                                <property
                                  dataType="System.String"
                                  description="Specifies the column in the reference table that a column joins."
                                  name="JoinToReferenceColumn">doc_no</property>
                                <property
                                  dataType="System.Null"
                                  description="Specifies the column in the reference table from which a column is copied."
                                  name="CopyFromReferenceColumn" />
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\Lookup.Inputs[Lookup Input].Columns[doc_date]"
                              cachedDataType="wstr"
                              cachedLength="255"
                              cachedName="doc_date"
                              lineageId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_ArHeader].Columns[doc_date]">
                              <properties>
                                <property
                                  dataType="System.String"
                                  description="Specifies the column in the reference table that a column joins."
                                  name="JoinToReferenceColumn">doc_date</property>
                                <property
                                  dataType="System.Null"
                                  description="Specifies the column in the reference table from which a column is copied."
                                  name="CopyFromReferenceColumn" />
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\Lookup.Inputs[Lookup Input].Columns[ref_docno]"
                              cachedDataType="wstr"
                              cachedLength="255"
                              cachedName="ref_docno"
                              lineageId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_ArHeader].Columns[ref_docno]">
                              <properties>
                                <property
                                  dataType="System.String"
                                  description="Specifies the column in the reference table that a column joins."
                                  name="JoinToReferenceColumn">ref_docno</property>
                                <property
                                  dataType="System.Null"
                                  description="Specifies the column in the reference table from which a column is copied."
                                  name="CopyFromReferenceColumn" />
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\Lookup.Inputs[Lookup Input].Columns[doc_cancel]"
                              cachedDataType="wstr"
                              cachedLength="255"
                              cachedName="doc_cancel"
                              lineageId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_ArHeader].Columns[doc_cancel]">
                              <properties>
                                <property
                                  dataType="System.String"
                                  description="Specifies the column in the reference table that a column joins."
                                  name="JoinToReferenceColumn">doc_cancel</property>
                                <property
                                  dataType="System.Null"
                                  description="Specifies the column in the reference table from which a column is copied."
                                  name="CopyFromReferenceColumn" />
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Foreach Zip\Sequence Container\Import DB\Lookup.Outputs[Lookup Match Output]"
                          errorOrTruncationOperation="Lookup"
                          exclusionGroup="1"
                          name="Lookup Match Output"
                          synchronousInputId="Package\Foreach Zip\Sequence Container\Import DB\Lookup.Inputs[Lookup Input]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Foreach Zip\Sequence Container\Import DB\Lookup.Outputs[Lookup No Match Output]"
                          description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                          exclusionGroup="1"
                          name="Lookup No Match Output"
                          synchronousInputId="Package\Foreach Zip\Sequence Container\Import DB\Lookup.Inputs[Lookup Input]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Foreach Zip\Sequence Container\Import DB\Lookup.Outputs[Lookup Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Lookup Error Output"
                          synchronousInputId="Package\Foreach Zip\Sequence Container\Import DB\Lookup.Inputs[Lookup Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Foreach Zip\Sequence Container\Import DB\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Foreach Zip\Sequence Container\Import DB\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Foreach Zip\Sequence Container\Import DB\Lookup 1"
                      componentClassID="Microsoft.Lookup"
                      contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                      description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                      name="Lookup 1"
                      usesDispositions="true"
                      version="6">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the SQL statement that generates the lookup table."
                          expressionType="Notify"
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from [dbo].[ST_Scard_Detail_dayend]</property>
                        <property
                          dataType="System.String"
                          description="Specifies a SQL statement that uses parameters to generate the lookup table."
                          expressionType="Notify"
                          name="SqlCommandParam"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select * from [dbo].[ST_Scard_Detail_dayend]) [refTable]
where [refTable].[DealerCode] = ? and [refTable].[Branch_no] = ? and [refTable].[icard_id] = ? and [refTable].[Branch_Name] = ? and [refTable].[date_card] = ? and [refTable].[scard_group] = ? and [refTable].[doc_no] = ? and [refTable].[pro_code] = ? and [refTable].[pro_size_name] = ?</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of connection used to access the reference dataset."
                          name="ConnectionType"
                          typeConverter="LookupConnectionType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the cache type of the lookup table."
                          name="CacheType"
                          typeConverter="CacheType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                          name="NoMatchBehavior"
                          typeConverter="LookupNoMatchBehavior">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                          name="NoMatchCachePercentage">0</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                          name="MaxMemoryUsage">25</property>
                        <property
                          dataType="System.Int64"
                          description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                          name="MaxMemoryUsage64">25</property>
                        <property
                          dataType="System.String"
                          description="Indicates whether to reference metadata in an XML format."
                          name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="ID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="DealerCode" dataType="DT_WSTR" length="10" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Branch_no" dataType="DT_WSTR" length="10" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="icard_id" dataType="DT_WSTR" length="10" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Branch_Name" dataType="DT_WSTR" length="255" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="scard_group" dataType="DT_WSTR" length="255" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="doc_no" dataType="DT_WSTR" length="30" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="date_card" dataType="DT_WSTR" length="255" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="pro_code" dataType="DT_WSTR" length="180" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="pro_size_name" dataType="DT_WSTR" length="255" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="status_dayend" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="ExpirationDate" dataType="DT_DBTIMESTAMP" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                          name="ParameterMap">#{Package\Foreach Zip\Sequence Container\Import DB\196:invalid};#{Package\Foreach Zip\Sequence Container\Import DB\197:invalid};#{Package\Foreach Zip\Sequence Container\Import DB\198:invalid};#{Package\Foreach Zip\Sequence Container\Import DB\199:invalid};#{Package\Foreach Zip\Sequence Container\Import DB\200:invalid};#{Package\Foreach Zip\Sequence Container\Import DB\201:invalid};#{Package\Foreach Zip\Sequence Container\Import DB\202:invalid};#{Package\Foreach Zip\Sequence Container\Import DB\203:invalid};#{Package\Foreach Zip\Sequence Container\Import DB\204:invalid};</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                          name="TreatDuplicateKeysAsError">false</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Foreach Zip\Sequence Container\Import DB\Lookup 1.Connections[OleDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[LocalHost.EMFO_225]"
                          connectionManagerRefId="Package.ConnectionManagers[LocalHost.EMFO_225]"
                          description="Connection manager used to access lookup data."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Foreach Zip\Sequence Container\Import DB\Lookup 1.Inputs[Lookup Input]"
                          name="Lookup Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\Lookup 1.Inputs[Lookup Input].Columns[pro_size_name]"
                              cachedDataType="wstr"
                              cachedLength="255"
                              cachedName="pro_size_name"
                              lineageId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_Scard_Detail].Columns[pro_size_name]">
                              <properties>
                                <property
                                  dataType="System.String"
                                  description="Specifies the column in the reference table that a column joins."
                                  name="JoinToReferenceColumn">pro_size_name</property>
                                <property
                                  dataType="System.Null"
                                  description="Specifies the column in the reference table from which a column is copied."
                                  name="CopyFromReferenceColumn" />
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\Lookup 1.Inputs[Lookup Input].Columns[pro_code]"
                              cachedDataType="wstr"
                              cachedLength="255"
                              cachedName="pro_code"
                              lineageId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_Scard_Detail].Columns[pro_code]">
                              <properties>
                                <property
                                  dataType="System.String"
                                  description="Specifies the column in the reference table that a column joins."
                                  name="JoinToReferenceColumn">pro_code</property>
                                <property
                                  dataType="System.Null"
                                  description="Specifies the column in the reference table from which a column is copied."
                                  name="CopyFromReferenceColumn" />
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\Lookup 1.Inputs[Lookup Input].Columns[doc_no]"
                              cachedDataType="wstr"
                              cachedLength="255"
                              cachedName="doc_no"
                              lineageId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_Scard_Detail].Columns[doc_no]">
                              <properties>
                                <property
                                  dataType="System.String"
                                  description="Specifies the column in the reference table that a column joins."
                                  name="JoinToReferenceColumn">doc_no</property>
                                <property
                                  dataType="System.Null"
                                  description="Specifies the column in the reference table from which a column is copied."
                                  name="CopyFromReferenceColumn" />
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\Lookup 1.Inputs[Lookup Input].Columns[scard_group]"
                              cachedDataType="wstr"
                              cachedLength="255"
                              cachedName="scard_group"
                              lineageId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_Scard_Detail].Columns[scard_group]">
                              <properties>
                                <property
                                  dataType="System.String"
                                  description="Specifies the column in the reference table that a column joins."
                                  name="JoinToReferenceColumn">scard_group</property>
                                <property
                                  dataType="System.Null"
                                  description="Specifies the column in the reference table from which a column is copied."
                                  name="CopyFromReferenceColumn" />
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\Lookup 1.Inputs[Lookup Input].Columns[date_card]"
                              cachedDataType="wstr"
                              cachedLength="255"
                              cachedName="date_card"
                              lineageId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_Scard_Detail].Columns[date_card]">
                              <properties>
                                <property
                                  dataType="System.String"
                                  description="Specifies the column in the reference table that a column joins."
                                  name="JoinToReferenceColumn">date_card</property>
                                <property
                                  dataType="System.Null"
                                  description="Specifies the column in the reference table from which a column is copied."
                                  name="CopyFromReferenceColumn" />
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\Lookup 1.Inputs[Lookup Input].Columns[Branch_Name]"
                              cachedDataType="wstr"
                              cachedLength="255"
                              cachedName="Branch_Name"
                              lineageId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_Scard_Detail].Columns[Branch_Name]">
                              <properties>
                                <property
                                  dataType="System.String"
                                  description="Specifies the column in the reference table that a column joins."
                                  name="JoinToReferenceColumn">Branch_Name</property>
                                <property
                                  dataType="System.Null"
                                  description="Specifies the column in the reference table from which a column is copied."
                                  name="CopyFromReferenceColumn" />
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\Lookup 1.Inputs[Lookup Input].Columns[icard_id]"
                              cachedDataType="wstr"
                              cachedLength="255"
                              cachedName="icard_id"
                              lineageId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_Scard_Detail].Columns[icard_id]">
                              <properties>
                                <property
                                  dataType="System.String"
                                  description="Specifies the column in the reference table that a column joins."
                                  name="JoinToReferenceColumn">icard_id</property>
                                <property
                                  dataType="System.Null"
                                  description="Specifies the column in the reference table from which a column is copied."
                                  name="CopyFromReferenceColumn" />
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\Lookup 1.Inputs[Lookup Input].Columns[DealerCode]"
                              cachedDataType="wstr"
                              cachedLength="255"
                              cachedName="DealerCode"
                              lineageId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_Scard_Detail].Columns[DealerCode]">
                              <properties>
                                <property
                                  dataType="System.String"
                                  description="Specifies the column in the reference table that a column joins."
                                  name="JoinToReferenceColumn">DealerCode</property>
                                <property
                                  dataType="System.Null"
                                  description="Specifies the column in the reference table from which a column is copied."
                                  name="CopyFromReferenceColumn" />
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\Lookup 1.Inputs[Lookup Input].Columns[Branch_no]"
                              cachedDataType="wstr"
                              cachedLength="255"
                              cachedName="Branch_no"
                              lineageId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_Scard_Detail].Columns[Branch_no]">
                              <properties>
                                <property
                                  dataType="System.String"
                                  description="Specifies the column in the reference table that a column joins."
                                  name="JoinToReferenceColumn">Branch_no</property>
                                <property
                                  dataType="System.Null"
                                  description="Specifies the column in the reference table from which a column is copied."
                                  name="CopyFromReferenceColumn" />
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Foreach Zip\Sequence Container\Import DB\Lookup 1.Outputs[Lookup Match Output]"
                          errorOrTruncationOperation="Lookup"
                          exclusionGroup="1"
                          name="Lookup Match Output"
                          synchronousInputId="Package\Foreach Zip\Sequence Container\Import DB\Lookup 1.Inputs[Lookup Input]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Foreach Zip\Sequence Container\Import DB\Lookup 1.Outputs[Lookup No Match Output]"
                          description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                          exclusionGroup="1"
                          name="Lookup No Match Output"
                          synchronousInputId="Package\Foreach Zip\Sequence Container\Import DB\Lookup 1.Inputs[Lookup Input]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Foreach Zip\Sequence Container\Import DB\Lookup 1.Outputs[Lookup Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Lookup Error Output"
                          synchronousInputId="Package\Foreach Zip\Sequence Container\Import DB\Lookup 1.Inputs[Lookup Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\Lookup 1.Outputs[Lookup Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Foreach Zip\Sequence Container\Import DB\Lookup 1.Outputs[Lookup Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\Lookup 1.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Foreach Zip\Sequence Container\Import DB\Lookup 1.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Foreach Zip\Sequence Container\Import DB\ST_ArHeader_dayend"
                      componentClassID="Microsoft.OLEDBDestination"
                      contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                      description="OLE DB Destination"
                      name="ST_ArHeader_dayend"
                      usesDispositions="true"
                      version="4">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the database object used to open a rowset."
                          name="OpenRowset">[dbo].[ST_ArHeader_dayend]</property>
                        <property
                          dataType="System.String"
                          description="Specifies the variable that contains the name of the database object used to open a rowset."
                          name="OpenRowsetVariable"></property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Forces the use of the DefaultCodePage property value when describing character data."
                          name="AlwaysUseDefaultCodePage">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the mode used to access the database."
                          name="AccessMode"
                          typeConverter="AccessMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepIdentity">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepNulls">false</property>
                        <property
                          dataType="System.String"
                          description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                          name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                          name="FastLoadMaxInsertCommitSize">2147483647</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Foreach Zip\Sequence Container\Import DB\ST_ArHeader_dayend.Connections[OleDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[LocalHost.EMFO_225]"
                          connectionManagerRefId="Package.ConnectionManagers[LocalHost.EMFO_225]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Foreach Zip\Sequence Container\Import DB\ST_ArHeader_dayend.Inputs[OLE DB Destination Input]"
                          errorOrTruncationOperation="Insert"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="OLE DB Destination Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\ST_ArHeader_dayend.Inputs[OLE DB Destination Input].Columns[icard_id]"
                              cachedDataType="wstr"
                              cachedLength="255"
                              cachedName="icard_id"
                              externalMetadataColumnId="Package\Foreach Zip\Sequence Container\Import DB\ST_ArHeader_dayend.Inputs[OLE DB Destination Input].ExternalColumns[icard_id]"
                              lineageId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_ArHeader].Columns[icard_id]" />
                            <inputColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\ST_ArHeader_dayend.Inputs[OLE DB Destination Input].Columns[DealerCode]"
                              cachedDataType="wstr"
                              cachedLength="255"
                              cachedName="DealerCode"
                              externalMetadataColumnId="Package\Foreach Zip\Sequence Container\Import DB\ST_ArHeader_dayend.Inputs[OLE DB Destination Input].ExternalColumns[DealerCode]"
                              lineageId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_ArHeader].Columns[DealerCode]" />
                            <inputColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\ST_ArHeader_dayend.Inputs[OLE DB Destination Input].Columns[Branch_no]"
                              cachedDataType="wstr"
                              cachedLength="255"
                              cachedName="Branch_no"
                              externalMetadataColumnId="Package\Foreach Zip\Sequence Container\Import DB\ST_ArHeader_dayend.Inputs[OLE DB Destination Input].ExternalColumns[branch_no]"
                              lineageId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_ArHeader].Columns[Branch_no]" />
                            <inputColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\ST_ArHeader_dayend.Inputs[OLE DB Destination Input].Columns[Branch_Name]"
                              cachedDataType="wstr"
                              cachedLength="255"
                              cachedName="Branch_Name"
                              externalMetadataColumnId="Package\Foreach Zip\Sequence Container\Import DB\ST_ArHeader_dayend.Inputs[OLE DB Destination Input].ExternalColumns[branch_name]"
                              lineageId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_ArHeader].Columns[Branch_Name]" />
                            <inputColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\ST_ArHeader_dayend.Inputs[OLE DB Destination Input].Columns[doc_no]"
                              cachedDataType="wstr"
                              cachedLength="255"
                              cachedName="doc_no"
                              externalMetadataColumnId="Package\Foreach Zip\Sequence Container\Import DB\ST_ArHeader_dayend.Inputs[OLE DB Destination Input].ExternalColumns[doc_no]"
                              lineageId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_ArHeader].Columns[doc_no]" />
                            <inputColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\ST_ArHeader_dayend.Inputs[OLE DB Destination Input].Columns[doc_date]"
                              cachedDataType="wstr"
                              cachedLength="255"
                              cachedName="doc_date"
                              externalMetadataColumnId="Package\Foreach Zip\Sequence Container\Import DB\ST_ArHeader_dayend.Inputs[OLE DB Destination Input].ExternalColumns[doc_date]"
                              lineageId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_ArHeader].Columns[doc_date]" />
                            <inputColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\ST_ArHeader_dayend.Inputs[OLE DB Destination Input].Columns[ref_docno]"
                              cachedDataType="wstr"
                              cachedLength="255"
                              cachedName="ref_docno"
                              externalMetadataColumnId="Package\Foreach Zip\Sequence Container\Import DB\ST_ArHeader_dayend.Inputs[OLE DB Destination Input].ExternalColumns[ref_docno]"
                              lineageId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_ArHeader].Columns[ref_docno]" />
                            <inputColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\ST_ArHeader_dayend.Inputs[OLE DB Destination Input].Columns[doc_cancel]"
                              cachedDataType="wstr"
                              cachedLength="255"
                              cachedName="doc_cancel"
                              externalMetadataColumnId="Package\Foreach Zip\Sequence Container\Import DB\ST_ArHeader_dayend.Inputs[OLE DB Destination Input].ExternalColumns[doc_cancel]"
                              lineageId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_ArHeader].Columns[doc_cancel]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\ST_ArHeader_dayend.Inputs[OLE DB Destination Input].ExternalColumns[id]"
                              dataType="i4"
                              name="id" />
                            <externalMetadataColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\ST_ArHeader_dayend.Inputs[OLE DB Destination Input].ExternalColumns[branch_name]"
                              dataType="wstr"
                              length="255"
                              name="branch_name" />
                            <externalMetadataColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\ST_ArHeader_dayend.Inputs[OLE DB Destination Input].ExternalColumns[doc_no]"
                              dataType="wstr"
                              length="50"
                              name="doc_no" />
                            <externalMetadataColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\ST_ArHeader_dayend.Inputs[OLE DB Destination Input].ExternalColumns[doc_date]"
                              dataType="wstr"
                              length="50"
                              name="doc_date" />
                            <externalMetadataColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\ST_ArHeader_dayend.Inputs[OLE DB Destination Input].ExternalColumns[DealerCode]"
                              dataType="wstr"
                              length="50"
                              name="DealerCode" />
                            <externalMetadataColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\ST_ArHeader_dayend.Inputs[OLE DB Destination Input].ExternalColumns[branch_no]"
                              dataType="wstr"
                              length="50"
                              name="branch_no" />
                            <externalMetadataColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\ST_ArHeader_dayend.Inputs[OLE DB Destination Input].ExternalColumns[icard_id]"
                              dataType="wstr"
                              length="50"
                              name="icard_id" />
                            <externalMetadataColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\ST_ArHeader_dayend.Inputs[OLE DB Destination Input].ExternalColumns[ref_docno]"
                              dataType="wstr"
                              length="120"
                              name="ref_docno" />
                            <externalMetadataColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\ST_ArHeader_dayend.Inputs[OLE DB Destination Input].ExternalColumns[doc_cancel]"
                              dataType="wstr"
                              length="50"
                              name="doc_cancel" />
                            <externalMetadataColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\ST_ArHeader_dayend.Inputs[OLE DB Destination Input].ExternalColumns[status_dayend]"
                              dataType="bool"
                              name="status_dayend" />
                            <externalMetadataColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\ST_ArHeader_dayend.Inputs[OLE DB Destination Input].ExternalColumns[ExpirationDate]"
                              dataType="dbTimeStamp"
                              name="ExpirationDate" />
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Foreach Zip\Sequence Container\Import DB\ST_ArHeader_dayend.Outputs[OLE DB Destination Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="OLE DB Destination Error Output"
                          synchronousInputId="Package\Foreach Zip\Sequence Container\Import DB\ST_ArHeader_dayend.Inputs[OLE DB Destination Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\ST_ArHeader_dayend.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Foreach Zip\Sequence Container\Import DB\ST_ArHeader_dayend.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\ST_ArHeader_dayend.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Foreach Zip\Sequence Container\Import DB\ST_ArHeader_dayend.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Foreach Zip\Sequence Container\Import DB\ST_Scard_Detail_dayend"
                      componentClassID="Microsoft.OLEDBDestination"
                      contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                      description="OLE DB Destination"
                      name="ST_Scard_Detail_dayend"
                      usesDispositions="true"
                      version="4">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the database object used to open a rowset."
                          name="OpenRowset">[dbo].[ST_Scard_Detail_dayend]</property>
                        <property
                          dataType="System.String"
                          description="Specifies the variable that contains the name of the database object used to open a rowset."
                          name="OpenRowsetVariable"></property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Forces the use of the DefaultCodePage property value when describing character data."
                          name="AlwaysUseDefaultCodePage">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the mode used to access the database."
                          name="AccessMode"
                          typeConverter="AccessMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepIdentity">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepNulls">false</property>
                        <property
                          dataType="System.String"
                          description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                          name="FastLoadOptions"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                          name="FastLoadMaxInsertCommitSize">2147483647</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Foreach Zip\Sequence Container\Import DB\ST_Scard_Detail_dayend.Connections[OleDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[LocalHost.EMFO_225]"
                          connectionManagerRefId="Package.ConnectionManagers[LocalHost.EMFO_225]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Foreach Zip\Sequence Container\Import DB\ST_Scard_Detail_dayend.Inputs[OLE DB Destination Input]"
                          errorOrTruncationOperation="Insert"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="OLE DB Destination Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\ST_Scard_Detail_dayend.Inputs[OLE DB Destination Input].Columns[DealerCode]"
                              cachedDataType="wstr"
                              cachedLength="255"
                              cachedName="DealerCode"
                              externalMetadataColumnId="Package\Foreach Zip\Sequence Container\Import DB\ST_Scard_Detail_dayend.Inputs[OLE DB Destination Input].ExternalColumns[DealerCode]"
                              lineageId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_Scard_Detail].Columns[DealerCode]" />
                            <inputColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\ST_Scard_Detail_dayend.Inputs[OLE DB Destination Input].Columns[Branch_no]"
                              cachedDataType="wstr"
                              cachedLength="255"
                              cachedName="Branch_no"
                              externalMetadataColumnId="Package\Foreach Zip\Sequence Container\Import DB\ST_Scard_Detail_dayend.Inputs[OLE DB Destination Input].ExternalColumns[Branch_no]"
                              lineageId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_Scard_Detail].Columns[Branch_no]" />
                            <inputColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\ST_Scard_Detail_dayend.Inputs[OLE DB Destination Input].Columns[icard_id]"
                              cachedDataType="wstr"
                              cachedLength="255"
                              cachedName="icard_id"
                              externalMetadataColumnId="Package\Foreach Zip\Sequence Container\Import DB\ST_Scard_Detail_dayend.Inputs[OLE DB Destination Input].ExternalColumns[icard_id]"
                              lineageId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_Scard_Detail].Columns[icard_id]" />
                            <inputColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\ST_Scard_Detail_dayend.Inputs[OLE DB Destination Input].Columns[Branch_Name]"
                              cachedDataType="wstr"
                              cachedLength="255"
                              cachedName="Branch_Name"
                              externalMetadataColumnId="Package\Foreach Zip\Sequence Container\Import DB\ST_Scard_Detail_dayend.Inputs[OLE DB Destination Input].ExternalColumns[Branch_Name]"
                              lineageId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_Scard_Detail].Columns[Branch_Name]" />
                            <inputColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\ST_Scard_Detail_dayend.Inputs[OLE DB Destination Input].Columns[date_card]"
                              cachedDataType="wstr"
                              cachedLength="255"
                              cachedName="date_card"
                              externalMetadataColumnId="Package\Foreach Zip\Sequence Container\Import DB\ST_Scard_Detail_dayend.Inputs[OLE DB Destination Input].ExternalColumns[date_card]"
                              lineageId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_Scard_Detail].Columns[date_card]" />
                            <inputColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\ST_Scard_Detail_dayend.Inputs[OLE DB Destination Input].Columns[scard_group]"
                              cachedDataType="wstr"
                              cachedLength="255"
                              cachedName="scard_group"
                              externalMetadataColumnId="Package\Foreach Zip\Sequence Container\Import DB\ST_Scard_Detail_dayend.Inputs[OLE DB Destination Input].ExternalColumns[scard_group]"
                              lineageId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_Scard_Detail].Columns[scard_group]" />
                            <inputColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\ST_Scard_Detail_dayend.Inputs[OLE DB Destination Input].Columns[doc_no]"
                              cachedDataType="wstr"
                              cachedLength="255"
                              cachedName="doc_no"
                              externalMetadataColumnId="Package\Foreach Zip\Sequence Container\Import DB\ST_Scard_Detail_dayend.Inputs[OLE DB Destination Input].ExternalColumns[doc_no]"
                              lineageId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_Scard_Detail].Columns[doc_no]" />
                            <inputColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\ST_Scard_Detail_dayend.Inputs[OLE DB Destination Input].Columns[pro_code]"
                              cachedDataType="wstr"
                              cachedLength="255"
                              cachedName="pro_code"
                              externalMetadataColumnId="Package\Foreach Zip\Sequence Container\Import DB\ST_Scard_Detail_dayend.Inputs[OLE DB Destination Input].ExternalColumns[pro_code]"
                              lineageId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_Scard_Detail].Columns[pro_code]" />
                            <inputColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\ST_Scard_Detail_dayend.Inputs[OLE DB Destination Input].Columns[pro_size_name]"
                              cachedDataType="wstr"
                              cachedLength="255"
                              cachedName="pro_size_name"
                              externalMetadataColumnId="Package\Foreach Zip\Sequence Container\Import DB\ST_Scard_Detail_dayend.Inputs[OLE DB Destination Input].ExternalColumns[pro_size_name]"
                              lineageId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_Scard_Detail].Columns[pro_size_name]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\ST_Scard_Detail_dayend.Inputs[OLE DB Destination Input].ExternalColumns[ID]"
                              dataType="i4"
                              name="ID" />
                            <externalMetadataColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\ST_Scard_Detail_dayend.Inputs[OLE DB Destination Input].ExternalColumns[icard_id]"
                              dataType="wstr"
                              length="10"
                              name="icard_id" />
                            <externalMetadataColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\ST_Scard_Detail_dayend.Inputs[OLE DB Destination Input].ExternalColumns[DealerCode]"
                              dataType="wstr"
                              length="10"
                              name="DealerCode" />
                            <externalMetadataColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\ST_Scard_Detail_dayend.Inputs[OLE DB Destination Input].ExternalColumns[Branch_no]"
                              dataType="wstr"
                              length="10"
                              name="Branch_no" />
                            <externalMetadataColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\ST_Scard_Detail_dayend.Inputs[OLE DB Destination Input].ExternalColumns[Branch_Name]"
                              dataType="wstr"
                              length="255"
                              name="Branch_Name" />
                            <externalMetadataColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\ST_Scard_Detail_dayend.Inputs[OLE DB Destination Input].ExternalColumns[date_card]"
                              dataType="wstr"
                              length="255"
                              name="date_card" />
                            <externalMetadataColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\ST_Scard_Detail_dayend.Inputs[OLE DB Destination Input].ExternalColumns[scard_group]"
                              dataType="wstr"
                              length="255"
                              name="scard_group" />
                            <externalMetadataColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\ST_Scard_Detail_dayend.Inputs[OLE DB Destination Input].ExternalColumns[doc_no]"
                              dataType="wstr"
                              length="30"
                              name="doc_no" />
                            <externalMetadataColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\ST_Scard_Detail_dayend.Inputs[OLE DB Destination Input].ExternalColumns[pro_code]"
                              dataType="wstr"
                              length="180"
                              name="pro_code" />
                            <externalMetadataColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\ST_Scard_Detail_dayend.Inputs[OLE DB Destination Input].ExternalColumns[pro_size_name]"
                              dataType="wstr"
                              length="255"
                              name="pro_size_name" />
                            <externalMetadataColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\ST_Scard_Detail_dayend.Inputs[OLE DB Destination Input].ExternalColumns[status_dayend]"
                              dataType="bool"
                              name="status_dayend" />
                            <externalMetadataColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\ST_Scard_Detail_dayend.Inputs[OLE DB Destination Input].ExternalColumns[ExpirationDate]"
                              dataType="dbTimeStamp"
                              name="ExpirationDate" />
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Foreach Zip\Sequence Container\Import DB\ST_Scard_Detail_dayend.Outputs[OLE DB Destination Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="OLE DB Destination Error Output"
                          synchronousInputId="Package\Foreach Zip\Sequence Container\Import DB\ST_Scard_Detail_dayend.Inputs[OLE DB Destination Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\ST_Scard_Detail_dayend.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Foreach Zip\Sequence Container\Import DB\ST_Scard_Detail_dayend.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\ST_Scard_Detail_dayend.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Foreach Zip\Sequence Container\Import DB\ST_Scard_Detail_dayend.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Foreach Zip\Sequence Container\Import DB\XML Source"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Extracts data from an XML file. For example, extract catalog data from an XML file that represents catalogs and catalog items. Before using, specify the schema and generate an output for each XML element.;Microsoft Corporation;Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
                      description="Extracts data from an XML file. For example, extract catalog data from an XML file that represents catalogs and catalog items. Before using, specify the schema and generate an output for each XML element."
                      name="XML Source"
                      usesDispositions="true"
                      version="2">
                      <properties>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">Microsoft.XmlSourceAdapter</property>
                        <property
                          dataType="System.String"
                          description="The XML data used by the XML source adapter."
                          expressionType="Notify"
                          name="XMLData">C:\Files\XMLZIPPED\.xml</property>
                        <property
                          dataType="System.String"
                          description="The variable used by the XML source adapter to specify XML data."
                          name="XMLDataVariable"></property>
                        <property
                          dataType="System.Int32"
                          description="Defines how the XML source adapter gets XML data."
                          name="AccessMode">0</property>
                        <property
                          dataType="System.String"
                          description="The XML schema definition used by the XML source adapter."
                          expressionType="Notify"
                          name="XMLSchemaDefinition">C:\Files\XMLNEEDATLEASTONE\prod.xsd</property>
                        <property
                          dataType="System.Boolean"
                          description="Identifies whether or not to use inline schema."
                          name="UseInlineSchema">false</property>
                        <property
                          dataType="System.Int32"
                          description="Defines how XML integer types are mapped."
                          name="XMLIntegerMapping"
                          typeConverter="Microsoft.SqlServer.Dts.Pipeline.XmlSourceAdapter+XMLIntegerMappingConverter">0</property>
                      </properties>
                      <outputs>
                        <output
                          refId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_Scard_Detail]"
                          name="ST_Scard_Detail">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Identifies the rowset associated with the output."
                              name="RowsetID">ST_Scard_Detail</property>
                          </properties>
                          <outputColumns>
                            <outputColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_Scard_Detail].Columns[DealerCode]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_Scard_Detail].ExternalColumns[DealerCode]"
                              length="255"
                              lineageId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_Scard_Detail].Columns[DealerCode]"
                              name="DealerCode"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_Scard_Detail].Columns[Branch_no]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_Scard_Detail].ExternalColumns[Branch_no]"
                              length="255"
                              lineageId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_Scard_Detail].Columns[Branch_no]"
                              name="Branch_no"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_Scard_Detail].Columns[icard_id]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_Scard_Detail].ExternalColumns[icard_id]"
                              length="255"
                              lineageId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_Scard_Detail].Columns[icard_id]"
                              name="icard_id"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_Scard_Detail].Columns[Branch_Name]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_Scard_Detail].ExternalColumns[Branch_Name]"
                              length="255"
                              lineageId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_Scard_Detail].Columns[Branch_Name]"
                              name="Branch_Name"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_Scard_Detail].Columns[date_card]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_Scard_Detail].ExternalColumns[date_card]"
                              length="255"
                              lineageId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_Scard_Detail].Columns[date_card]"
                              name="date_card"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_Scard_Detail].Columns[scard_group]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_Scard_Detail].ExternalColumns[scard_group]"
                              length="255"
                              lineageId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_Scard_Detail].Columns[scard_group]"
                              name="scard_group"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_Scard_Detail].Columns[doc_no]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_Scard_Detail].ExternalColumns[doc_no]"
                              length="255"
                              lineageId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_Scard_Detail].Columns[doc_no]"
                              name="doc_no"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_Scard_Detail].Columns[pro_code]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_Scard_Detail].ExternalColumns[pro_code]"
                              length="255"
                              lineageId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_Scard_Detail].Columns[pro_code]"
                              name="pro_code"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_Scard_Detail].Columns[pro_size_name]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_Scard_Detail].ExternalColumns[pro_size_name]"
                              length="255"
                              lineageId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_Scard_Detail].Columns[pro_size_name]"
                              name="pro_size_name"
                              truncationRowDisposition="FailComponent" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_Scard_Detail].ExternalColumns[DealerCode]"
                              dataType="wstr"
                              length="255"
                              name="DealerCode">
                              <properties>
                                <property
                                  dataType="System.String"
                                  name="CLRType">System.String</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_Scard_Detail].ExternalColumns[Branch_no]"
                              dataType="wstr"
                              length="255"
                              name="Branch_no">
                              <properties>
                                <property
                                  dataType="System.String"
                                  name="CLRType">System.String</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_Scard_Detail].ExternalColumns[icard_id]"
                              dataType="wstr"
                              length="255"
                              name="icard_id">
                              <properties>
                                <property
                                  dataType="System.String"
                                  name="CLRType">System.String</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_Scard_Detail].ExternalColumns[Branch_Name]"
                              dataType="wstr"
                              length="255"
                              name="Branch_Name">
                              <properties>
                                <property
                                  dataType="System.String"
                                  name="CLRType">System.String</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_Scard_Detail].ExternalColumns[date_card]"
                              dataType="wstr"
                              length="255"
                              name="date_card">
                              <properties>
                                <property
                                  dataType="System.String"
                                  name="CLRType">System.String</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_Scard_Detail].ExternalColumns[scard_group]"
                              dataType="wstr"
                              length="255"
                              name="scard_group">
                              <properties>
                                <property
                                  dataType="System.String"
                                  name="CLRType">System.String</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_Scard_Detail].ExternalColumns[doc_no]"
                              dataType="wstr"
                              length="255"
                              name="doc_no">
                              <properties>
                                <property
                                  dataType="System.String"
                                  name="CLRType">System.String</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_Scard_Detail].ExternalColumns[pro_code]"
                              dataType="wstr"
                              length="255"
                              name="pro_code">
                              <properties>
                                <property
                                  dataType="System.String"
                                  name="CLRType">System.String</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_Scard_Detail].ExternalColumns[pro_size_name]"
                              dataType="wstr"
                              length="255"
                              name="pro_size_name">
                              <properties>
                                <property
                                  dataType="System.String"
                                  name="CLRType">System.String</property>
                              </properties>
                            </externalMetadataColumn>
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_Scard_Detail Error Output]"
                          isErrorOut="true"
                          name="ST_Scard_Detail Error Output">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Identifies the rowset associated with the output."
                              name="RowsetID">ST_Scard_Detail</property>
                          </properties>
                          <outputColumns>
                            <outputColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_Scard_Detail Error Output].Columns[DealerCode]"
                              dataType="nText"
                              externalMetadataColumnId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_Scard_Detail Error Output].ExternalColumns[DealerCode]"
                              lineageId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_Scard_Detail Error Output].Columns[DealerCode]"
                              name="DealerCode" />
                            <outputColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_Scard_Detail Error Output].Columns[Branch_no]"
                              dataType="nText"
                              externalMetadataColumnId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_Scard_Detail Error Output].ExternalColumns[Branch_no]"
                              lineageId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_Scard_Detail Error Output].Columns[Branch_no]"
                              name="Branch_no" />
                            <outputColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_Scard_Detail Error Output].Columns[icard_id]"
                              dataType="nText"
                              externalMetadataColumnId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_Scard_Detail Error Output].ExternalColumns[icard_id]"
                              lineageId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_Scard_Detail Error Output].Columns[icard_id]"
                              name="icard_id" />
                            <outputColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_Scard_Detail Error Output].Columns[Branch_Name]"
                              dataType="nText"
                              externalMetadataColumnId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_Scard_Detail Error Output].ExternalColumns[Branch_Name]"
                              lineageId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_Scard_Detail Error Output].Columns[Branch_Name]"
                              name="Branch_Name" />
                            <outputColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_Scard_Detail Error Output].Columns[date_card]"
                              dataType="nText"
                              externalMetadataColumnId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_Scard_Detail Error Output].ExternalColumns[date_card]"
                              lineageId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_Scard_Detail Error Output].Columns[date_card]"
                              name="date_card" />
                            <outputColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_Scard_Detail Error Output].Columns[scard_group]"
                              dataType="nText"
                              externalMetadataColumnId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_Scard_Detail Error Output].ExternalColumns[scard_group]"
                              lineageId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_Scard_Detail Error Output].Columns[scard_group]"
                              name="scard_group" />
                            <outputColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_Scard_Detail Error Output].Columns[doc_no]"
                              dataType="nText"
                              externalMetadataColumnId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_Scard_Detail Error Output].ExternalColumns[doc_no]"
                              lineageId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_Scard_Detail Error Output].Columns[doc_no]"
                              name="doc_no" />
                            <outputColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_Scard_Detail Error Output].Columns[pro_code]"
                              dataType="nText"
                              externalMetadataColumnId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_Scard_Detail Error Output].ExternalColumns[pro_code]"
                              lineageId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_Scard_Detail Error Output].Columns[pro_code]"
                              name="pro_code" />
                            <outputColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_Scard_Detail Error Output].Columns[pro_size_name]"
                              dataType="nText"
                              externalMetadataColumnId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_Scard_Detail Error Output].ExternalColumns[pro_size_name]"
                              lineageId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_Scard_Detail Error Output].Columns[pro_size_name]"
                              name="pro_size_name" />
                            <outputColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_Scard_Detail Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_Scard_Detail Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_Scard_Detail Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_Scard_Detail Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_Scard_Detail Error Output].ExternalColumns[DealerCode]"
                              dataType="nText"
                              name="DealerCode" />
                            <externalMetadataColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_Scard_Detail Error Output].ExternalColumns[Branch_no]"
                              dataType="nText"
                              name="Branch_no" />
                            <externalMetadataColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_Scard_Detail Error Output].ExternalColumns[icard_id]"
                              dataType="nText"
                              name="icard_id" />
                            <externalMetadataColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_Scard_Detail Error Output].ExternalColumns[Branch_Name]"
                              dataType="nText"
                              name="Branch_Name" />
                            <externalMetadataColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_Scard_Detail Error Output].ExternalColumns[date_card]"
                              dataType="nText"
                              name="date_card" />
                            <externalMetadataColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_Scard_Detail Error Output].ExternalColumns[scard_group]"
                              dataType="nText"
                              name="scard_group" />
                            <externalMetadataColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_Scard_Detail Error Output].ExternalColumns[doc_no]"
                              dataType="nText"
                              name="doc_no" />
                            <externalMetadataColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_Scard_Detail Error Output].ExternalColumns[pro_code]"
                              dataType="nText"
                              name="pro_code" />
                            <externalMetadataColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_Scard_Detail Error Output].ExternalColumns[pro_size_name]"
                              dataType="nText"
                              name="pro_size_name" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_ArHeader]"
                          name="ST_ArHeader">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Identifies the rowset associated with the output."
                              name="RowsetID">ST_ArHeader</property>
                          </properties>
                          <outputColumns>
                            <outputColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_ArHeader].Columns[icard_id]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_ArHeader].ExternalColumns[icard_id]"
                              length="255"
                              lineageId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_ArHeader].Columns[icard_id]"
                              name="icard_id"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_ArHeader].Columns[DealerCode]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_ArHeader].ExternalColumns[DealerCode]"
                              length="255"
                              lineageId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_ArHeader].Columns[DealerCode]"
                              name="DealerCode"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_ArHeader].Columns[Branch_no]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_ArHeader].ExternalColumns[Branch_no]"
                              length="255"
                              lineageId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_ArHeader].Columns[Branch_no]"
                              name="Branch_no"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_ArHeader].Columns[Branch_Name]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_ArHeader].ExternalColumns[Branch_Name]"
                              length="255"
                              lineageId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_ArHeader].Columns[Branch_Name]"
                              name="Branch_Name"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_ArHeader].Columns[doc_no]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_ArHeader].ExternalColumns[doc_no]"
                              length="255"
                              lineageId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_ArHeader].Columns[doc_no]"
                              name="doc_no"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_ArHeader].Columns[doc_date]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_ArHeader].ExternalColumns[doc_date]"
                              length="255"
                              lineageId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_ArHeader].Columns[doc_date]"
                              name="doc_date"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_ArHeader].Columns[ref_docno]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_ArHeader].ExternalColumns[ref_docno]"
                              length="255"
                              lineageId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_ArHeader].Columns[ref_docno]"
                              name="ref_docno"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_ArHeader].Columns[doc_cancel]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_ArHeader].ExternalColumns[doc_cancel]"
                              length="255"
                              lineageId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_ArHeader].Columns[doc_cancel]"
                              name="doc_cancel"
                              truncationRowDisposition="FailComponent" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_ArHeader].ExternalColumns[icard_id]"
                              dataType="wstr"
                              length="255"
                              name="icard_id">
                              <properties>
                                <property
                                  dataType="System.String"
                                  name="CLRType">System.String</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_ArHeader].ExternalColumns[DealerCode]"
                              dataType="wstr"
                              length="255"
                              name="DealerCode">
                              <properties>
                                <property
                                  dataType="System.String"
                                  name="CLRType">System.String</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_ArHeader].ExternalColumns[Branch_no]"
                              dataType="wstr"
                              length="255"
                              name="Branch_no">
                              <properties>
                                <property
                                  dataType="System.String"
                                  name="CLRType">System.String</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_ArHeader].ExternalColumns[Branch_Name]"
                              dataType="wstr"
                              length="255"
                              name="Branch_Name">
                              <properties>
                                <property
                                  dataType="System.String"
                                  name="CLRType">System.String</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_ArHeader].ExternalColumns[doc_no]"
                              dataType="wstr"
                              length="255"
                              name="doc_no">
                              <properties>
                                <property
                                  dataType="System.String"
                                  name="CLRType">System.String</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_ArHeader].ExternalColumns[doc_date]"
                              dataType="wstr"
                              length="255"
                              name="doc_date">
                              <properties>
                                <property
                                  dataType="System.String"
                                  name="CLRType">System.String</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_ArHeader].ExternalColumns[ref_docno]"
                              dataType="wstr"
                              length="255"
                              name="ref_docno">
                              <properties>
                                <property
                                  dataType="System.String"
                                  name="CLRType">System.String</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_ArHeader].ExternalColumns[doc_cancel]"
                              dataType="wstr"
                              length="255"
                              name="doc_cancel">
                              <properties>
                                <property
                                  dataType="System.String"
                                  name="CLRType">System.String</property>
                              </properties>
                            </externalMetadataColumn>
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_ArHeader Error Output]"
                          isErrorOut="true"
                          name="ST_ArHeader Error Output">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Identifies the rowset associated with the output."
                              name="RowsetID">ST_ArHeader</property>
                          </properties>
                          <outputColumns>
                            <outputColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_ArHeader Error Output].Columns[icard_id]"
                              dataType="nText"
                              externalMetadataColumnId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_ArHeader Error Output].ExternalColumns[icard_id]"
                              lineageId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_ArHeader Error Output].Columns[icard_id]"
                              name="icard_id" />
                            <outputColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_ArHeader Error Output].Columns[DealerCode]"
                              dataType="nText"
                              externalMetadataColumnId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_ArHeader Error Output].ExternalColumns[DealerCode]"
                              lineageId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_ArHeader Error Output].Columns[DealerCode]"
                              name="DealerCode" />
                            <outputColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_ArHeader Error Output].Columns[Branch_no]"
                              dataType="nText"
                              externalMetadataColumnId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_ArHeader Error Output].ExternalColumns[Branch_no]"
                              lineageId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_ArHeader Error Output].Columns[Branch_no]"
                              name="Branch_no" />
                            <outputColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_ArHeader Error Output].Columns[Branch_Name]"
                              dataType="nText"
                              externalMetadataColumnId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_ArHeader Error Output].ExternalColumns[Branch_Name]"
                              lineageId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_ArHeader Error Output].Columns[Branch_Name]"
                              name="Branch_Name" />
                            <outputColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_ArHeader Error Output].Columns[doc_no]"
                              dataType="nText"
                              externalMetadataColumnId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_ArHeader Error Output].ExternalColumns[doc_no]"
                              lineageId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_ArHeader Error Output].Columns[doc_no]"
                              name="doc_no" />
                            <outputColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_ArHeader Error Output].Columns[doc_date]"
                              dataType="nText"
                              externalMetadataColumnId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_ArHeader Error Output].ExternalColumns[doc_date]"
                              lineageId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_ArHeader Error Output].Columns[doc_date]"
                              name="doc_date" />
                            <outputColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_ArHeader Error Output].Columns[ref_docno]"
                              dataType="nText"
                              externalMetadataColumnId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_ArHeader Error Output].ExternalColumns[ref_docno]"
                              lineageId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_ArHeader Error Output].Columns[ref_docno]"
                              name="ref_docno" />
                            <outputColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_ArHeader Error Output].Columns[doc_cancel]"
                              dataType="nText"
                              externalMetadataColumnId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_ArHeader Error Output].ExternalColumns[doc_cancel]"
                              lineageId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_ArHeader Error Output].Columns[doc_cancel]"
                              name="doc_cancel" />
                            <outputColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_ArHeader Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_ArHeader Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_ArHeader Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_ArHeader Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_ArHeader Error Output].ExternalColumns[icard_id]"
                              dataType="nText"
                              name="icard_id" />
                            <externalMetadataColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_ArHeader Error Output].ExternalColumns[DealerCode]"
                              dataType="nText"
                              name="DealerCode" />
                            <externalMetadataColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_ArHeader Error Output].ExternalColumns[Branch_no]"
                              dataType="nText"
                              name="Branch_no" />
                            <externalMetadataColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_ArHeader Error Output].ExternalColumns[Branch_Name]"
                              dataType="nText"
                              name="Branch_Name" />
                            <externalMetadataColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_ArHeader Error Output].ExternalColumns[doc_no]"
                              dataType="nText"
                              name="doc_no" />
                            <externalMetadataColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_ArHeader Error Output].ExternalColumns[doc_date]"
                              dataType="nText"
                              name="doc_date" />
                            <externalMetadataColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_ArHeader Error Output].ExternalColumns[ref_docno]"
                              dataType="nText"
                              name="ref_docno" />
                            <externalMetadataColumn
                              refId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_ArHeader Error Output].ExternalColumns[doc_cancel]"
                              dataType="nText"
                              name="doc_cancel" />
                          </externalMetadataColumns>
                        </output>
                      </outputs>
                    </component>
                  </components>
                  <paths>
                    <path
                      refId="Package\Foreach Zip\Sequence Container\Import DB.Paths[Conditional Split Default Output]"
                      endId="Package\Foreach Zip\Sequence Container\Import DB\Lookup.Inputs[Lookup Input]"
                      name="Conditional Split Default Output"
                      startId="Package\Foreach Zip\Sequence Container\Import DB\Conditional Split 1.Outputs[Conditional Split Default Output]" />
                    <path
                      refId="Package\Foreach Zip\Sequence Container\Import DB.Paths[filter10-TIRES]"
                      endId="Package\Foreach Zip\Sequence Container\Import DB\Lookup 1.Inputs[Lookup Input]"
                      name="filter10-TIRES"
                      startId="Package\Foreach Zip\Sequence Container\Import DB\Conditional Split.Outputs[filter10-TIRES]" />
                    <path
                      refId="Package\Foreach Zip\Sequence Container\Import DB.Paths[Lookup No Match Output]"
                      endId="Package\Foreach Zip\Sequence Container\Import DB\ST_ArHeader_dayend.Inputs[OLE DB Destination Input]"
                      name="Lookup No Match Output"
                      startId="Package\Foreach Zip\Sequence Container\Import DB\Lookup.Outputs[Lookup No Match Output]" />
                    <path
                      refId="Package\Foreach Zip\Sequence Container\Import DB.Paths[Lookup No Match Output1]"
                      endId="Package\Foreach Zip\Sequence Container\Import DB\ST_Scard_Detail_dayend.Inputs[OLE DB Destination Input]"
                      name="Lookup No Match Output"
                      startId="Package\Foreach Zip\Sequence Container\Import DB\Lookup 1.Outputs[Lookup No Match Output]" />
                    <path
                      refId="Package\Foreach Zip\Sequence Container\Import DB.Paths[ST_ArHeader]"
                      endId="Package\Foreach Zip\Sequence Container\Import DB\Conditional Split 1.Inputs[Conditional Split Input]"
                      name="ST_ArHeader"
                      startId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_ArHeader]" />
                    <path
                      refId="Package\Foreach Zip\Sequence Container\Import DB.Paths[ST_Scard_Detail]"
                      endId="Package\Foreach Zip\Sequence Container\Import DB\Conditional Split.Inputs[Conditional Split Input]"
                      name="ST_Scard_Detail"
                      startId="Package\Foreach Zip\Sequence Container\Import DB\XML Source.Outputs[ST_Scard_Detail]" />
                  </paths>
                </pipeline>
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Zip\Unzip"
          DTS:CreationName="Microsoft.ExecuteProcess"
          DTS:DelayValidation="True"
          DTS:Description="Execute Process Task"
          DTS:DTSID="{E879330F-3AB0-44EF-B5B1-B4A9525C5967}"
          DTS:ExecutableType="Microsoft.ExecuteProcess"
          DTS:LocaleID="-1"
          DTS:MaxErrorCount="10"
          DTS:ObjectName="Unzip"
          DTS:TaskContact="Execute Process Task;Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="Arguments">"e " + @[User::ZipFileName] + " -p" + @[User::Unzip_Password]   + " -o" + @[User::FilePath] + "  -y"</DTS:PropertyExpression>
          <DTS:PropertyExpression
            DTS:Name="Executable">@[User::varExePath]</DTS:PropertyExpression>
          <DTS:ObjectData>
            <ExecuteProcessData
              Executable="C:\Files\x64\7za.exe"
              Arguments="e C:\Files\XMLZIPPED\.zip -p1234 -oC:\Files\XMLZIPPED  -y" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Zip.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{2CFF5FE9-3AEE-44BF-98EB-3EB2AB9039CD}"
          DTS:From="Package\Foreach Zip\Unzip"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Foreach Zip\Sequence Container" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Zip.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{7EE8375B-57BC-48A2-974A-D97484178FF7}"
          DTS:From="Package\Foreach Zip\Sequence Container"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Foreach Zip\Move finished Zip" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Zip.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{AA05E7B4-E017-4D02-983B-3BDAB2CDB58C}"
          DTS:From="Package\Foreach Zip\Sequence Container"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\Foreach Zip\Move failed Zip"
          DTS:Value="1" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Zip.PrecedenceConstraints[Constraint 3]"
          DTS:CreationName=""
          DTS:DTSID="{79102932-30E5-426E-B761-70F3D62A2CD7}"
          DTS:From="Package\Foreach Zip\Sequence Container"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 3"
          DTS:To="Package\Foreach Zip\Delete XML"
          DTS:Value="2" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Zip.PrecedenceConstraints[Constraint 4]"
          DTS:CreationName=""
          DTS:DTSID="{5C06BE09-5B07-4CCB-9FBA-554E0CBE074C}"
          DTS:From="Package\Foreach Zip\Move failed Zip"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 4"
          DTS:To="Package\Foreach Zip\Error Counter" />
      </DTS:PrecedenceConstraints>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{0374433B-4DF0-4A19-9740-5B91D24D19B5}"
          DTS:ObjectName="{0374433B-4DF0-4A19-9740-5B91D24D19B5}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::FileName" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\If ErrorCounter &gt; 0"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:Disabled="True"
      DTS:DTSID="{b1c57736-7561-42ec-81a8-0983e5a8a5e5}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="If ErrorCounter &gt; 0"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_808a99a51169457d86a70b82f7928e69"
          VSTAMajorVersion="16"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::ErrorCounter">
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_5e942c650be44c1694118290091153c9")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_5e942c650be44c1694118290091153c9")]
[assembly: AssemblyCopyright("Copyright @  2023")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ST_808a99a51169457d86a70b82f7928e69.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{edb2a9be-fff8-45fe-acff-e74962650177}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_5e942c650be44c1694118290091153c9</RootNamespace><AssemblyName>ST_808a99a51169457d86a70b82f7928e69</AssemblyName><TargetFrameworkVersion>v4.7</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch><TargetFrameworkProfile></TargetFrameworkProfile></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" /><Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host><ProjectClient><HostIdentifier>SSIS_ST160</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
#endregion

namespace ST_5e942c650be44c1694118290091153c9
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // TODO: Add your code here
            var ErrorCounter = (int)Dts.Variables["User::ErrorCounter"].Value;
            if (ErrorCounter > 0)
            {
                // Do the next task
                Dts.TaskResult = (int)ScriptResults.Success;
            }
            else
            {
                // Stop the package execution
                Dts.TaskResult = (int)ScriptResults.Failure;
            }
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_5e942c650be44c1694118290091153c9</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_5e942c650be44c1694118290091153c9</msb:DisplayName>
    <msb:ProjectId>{29F00553-1E05-4DEF-9480-BC309ECE49FA}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_808a99a51169457d86a70b82f7928e69.csproj" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_5e942c650be44c1694118290091153c9.Properties.Settings.get_Default():ST_5e942c650be44c1694118290091153c9.Properties.Sett" +
    "ings")]

namespace ST_5e942c650be44c1694118290091153c9.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_5e942c650be44c1694118290091153c9.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_5e942c650be44c1694118290091153c9.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_5e942c650be44c1694118290091153c9.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_5e942c650be44c1694118290091153c9.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_5e942c650be44c1694118290091153c9.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_5e942c650be44c1694118290091153c9.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDANp43GMAAAAAAAAAAOAAIiALATAAAA4AAAAIAAAAAAAAgi0A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAADAtAABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAiA0AAAAgAAAADgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAAQAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAFgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABk
LQAAAAAAAEgAAAACAAUA9CAAAIQLAAABAAAAAAAAAHgsAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAPICKBAAAApvEQAACnIBAABwbxIAAApvEwAACqUbAAABFjEN
AigQAAAKFm8UAAAKKgIoEAAAChdvFAAACioeAigVAAAKKh4CKBYAAAoqrn4BAAAELR5yJwAAcNAD
AAACKBcAAApvGAAACnMZAAAKgAEAAAR+AQAABCoafgIAAAQqHgKAAgAABCoafgMAAAQqHgIoGgAA
CioucwgAAAaAAwAABCoAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAAuAMAACN+
AAAkBAAAWAUAACNTdHJpbmdzAAAAAHwJAACcAAAAI1VTABgKAAAQAAAAI0dVSUQAAAAoCgAAXAEA
ACNCbG9iAAAAAAAAAAIAAAFXHaABCQMAAAD6ATMAFgAAAQAAAB4AAAAFAAAABgAAAAkAAAABAAAA
GgAAAAIAAAAQAAAAAgAAAAMAAAAEAAAAAQAAAAQAAAABAAAAAQAAAAAAcgMBAAAAAAAGACsCQgQG
ALoCQgQGAHcBLwQPALYEAAAGAKQB8AMGAA4C8AMGAO8B8AMGAKEC8AMGAEsC8AMGAGQC8AMGALsB
8AMGANYB6AIKAH8CIQMKAPYAIQMGAKoDowMGAFoBLwQGACkFowMGABIEYgQGAAIE2wMOACoBXAMO
AIsBXAMOABIBxgMGAD8BQgQKAEoDIQMSAPgEoQASAHQAoQAGAAEAowMGAMEAowMGAH0AowMGAE8F
8AMAAAAAKwAAAAAAAQABAAEAEAC7AwcAOQABAAEAAAAQAGkExQRFAAEAAwAAARAAAgXFBFkAAwAH
AAMBAAAbBQAAPQAEAAoAEQCvA14AEQDmAGIAEQBkAGYABgZTAGoAVoALBW0AVoDGAG0AUCAAAAAA
hgDBAwYAAQCNIAAAAACGGCIEBgABAJUgAAAAAIMYIgQGAAEAnSAAAAAAkwgOBHEAAQDJIAAAAACT
CM4AdgABANAgAAAAAJMI2gB7AAEA2CAAAAAAlggwBYEAAgDfIAAAAACGGCIEBgACAOcgAAAAAJEY
KASGAAIAAAABAOICCQAiBAEAEQAiBAYAGQAiBAoAKQAiBBAAMQAiBBAAOQAiBBAAQQAiBBAASQAi
BBAAUQAiBBAAWQAiBBAAYQAiBBAAaQAiBAYAgQAiBAYAqQAiBBUAuQAiBAYAcQATBRsAwQD0BCAA
yQCaAyUA0QDYAisAwQA8BQEAcQAiBAYAiQAiBAYA4QCPAC8A4QBLBTYAkQAiBDsAsQAiBAYACAAU
AFQACAAYAFkAKQBzAMEALgALAJkALgATAKIALgAbAMEALgAjAMoALgArAPMALgAzAPMALgA7APMA
LgBDAMoALgBLAPkALgBTAPMALgBbABABQwBjAFkASQBzAMEAYQB7AFkAYwBrAFkAAwABAAQAAwAA
ABIEigAAAO4AjwAAADQFlAACAAQAAwACAAUABQABAAYABQACAAcABwAEgAAAAQAAAPIgZUYAAAAA
AAAHAAAABAAAAAAAAAAAAAAAQgBbAAAAAAAQAAAAAAAAAAAAAABLAAIDAAAAAAQAAAAAAAAAAAAA
AEIAowMAAAAAEAAAAAAAAAAAAAAASwA0AAAAAAAAAAAAAQAAAHMEAAAFAAIAAAAAAABJbnQzMgBT
VF81ZTk0MmM2NTBiZTQ0YzE2OTQxMTgyOTAwOTExNTNjOQA8TW9kdWxlPgBNaWNyb3NvZnQuU3Fs
U2VydmVyLk1hbmFnZWREVFMAdmFsdWVfXwBtc2NvcmxpYgBkZWZhdWx0SW5zdGFuY2UAVmFyaWFi
bGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUATWljcm9zb2Z0LlNxbFNlcnZl
ci5EdHMuUnVudGltZQBUeXBlAEZhaWx1cmUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3Vy
Y2VDdWx0dXJlAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBBcHBsaWNhdGlvblNldHRpbmdz
QmFzZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1
Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3Nh
YmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRy
aWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJp
YnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNB
dHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmli
dXRlAFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRy
aWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAZ2V0X1ZhbHVlAHZhbHVlAFN5c3Rl
bS5SdW50aW1lLlZlcnNpb25pbmcATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jv
c29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAU2NyaXB0T2JqZWN0TW9kZWwAU3lz
dGVtLkNvbXBvbmVudE1vZGVsAFNUXzVlOTQyYzY1MGJlNDRjMTY5NDExODI5MDA5MTE1M2M5LmRs
bABnZXRfSXRlbQBTeXN0ZW0ARW51bQByZXNvdXJjZU1hbgBTY3JpcHRNYWluAFN5c3RlbS5Db25m
aWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAEN1bHR1cmVJ
bmZvAGdldF9SZXNvdXJjZU1hbmFnZXIALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBT
eXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU1RfNWU5NDJj
NjUwYmU0NGMxNjk0MTE4MjkwMDkxMTUzYzkuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2Vz
AERlYnVnZ2luZ01vZGVzAFNUXzVlOTQyYzY1MGJlNDRjMTY5NDExODI5MDA5MTE1M2M5LlByb3Bl
cnRpZXMAZ2V0X1ZhcmlhYmxlcwBTZXR0aW5ncwBTdWNjZXNzAGdldF9EdHMAU2NyaXB0UmVzdWx0
cwBPYmplY3QAZ2V0X0RlZmF1bHQAc2V0X1Rhc2tSZXN1bHQAZ2V0X0Fzc2VtYmx5AAAlVQBzAGUA
cgA6ADoARQByAHIAbwByAEMAbwB1AG4AdABlAHIAAHFTAFQAXwA1AGUAOQA0ADIAYwA2ADUAMABi
AGUANAA0AGMAMQA2ADkANAAxADEAOAAyADkAMAAwADkAMQAxADUAMwBjADkALgBQAHIAbwBwAGUA
cgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAAAAAAAYkeoyVJpDi2rWtErSthsABCABAQgD
IAABBSABARERBCABAQ4FIAEBEVEEIAASYQQgABJlBSABEmkcAyAAHAYAARJxEXUEIAASeQYgAgEO
EnkIt3pcVhk04IkIiYRdzYCAzJEEAAAAAAQBAAAAAwYSSQMGEk0DBhIQAgYIAwYRFAQAABJJBAAA
Ek0FAAEBEk0EAAASEAMAAAEECAASSQQIABJNBAgAEhAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25F
eGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NUXzVlOTQyYzY1MGJlNDRjMTY5NDExODI5MDA5
MTE1M2M5AAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMjMAAEkBABouTkVURnJhbWV3b3JrLFZl
cnNpb249djQuNwEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC43AAC0
AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGli
LCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVj
NTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAA
AFBBRFBBRFC0AAAAWC0AAAAAAAAAAAAAci0AAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGQtAAAA
AAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAA
AAAASAAAAFhAAAAaBAAAAAAAAAAAAAAaBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYA
TwAAAAAAvQTv/gAAAQAAAAEAZUbyIAAAAQBlRvIgPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAA
AEQAAAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkA
bwBuAAAAAAAAALAEegMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVgMAAAEAMAAw
ADAAMAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAA
YQBuAHkATgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBu
AAAAAABTAFQAXwA1AGUAOQA0ADIAYwA2ADUAMABiAGUANAA0AGMAMQA2ADkANAAxADEAOAAyADkA
MAAwADkAMQAxADUAMwBjADkAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAw
AC4AOAA0ADMANAAuADEAOAAwADIAMQAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUA
AABTAFQAXwA1AGUAOQA0ADIAYwA2ADUAMABiAGUANAA0AGMAMQA2ADkANAAxADEAOAAyADkAMAAw
ADkAMQAxADUAMwBjADkALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgA
dAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADIAMwAAACoAAQABAEwAZQBnAGEAbABU
AHIAYQBkAGUAbQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUA
bgBhAG0AZQAAAFMAVABfADUAZQA5ADQAMgBjADYANQAwAGIAZQA0ADQAYwAxADYAOQA0ADEAMQA4
ADIAOQAwADAAOQAxADEANQAzAGMAOQAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEA
bQBlAAAAAABTAFQAXwA1AGUAOQA0ADIAYwA2ADUAMABiAGUANAA0AGMAMQA2ADkANAAxADEAOAAy
ADkAMAAwADkAMQAxADUAMwBjADkAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4A
AAAxAC4AMAAuADgANAAzADQALgAxADgAMAAyADEAAAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAg
AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADgANAAzADQALgAxADgAMAAyADEAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAMAAAAhD0A
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Script Send Mail"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:Disabled="True"
      DTS:DTSID="{b92cf8be-ed74-49b1-a872-6dcf10c720d3}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Script Send Mail"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_0a48a16f919843aebe22e25f1edaafb5"
          VSTAMajorVersion="16"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::Email_From_Password,User::Email_From_Username,User::Email_To">
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_9a746a1036b7454cbbfeb218d264771c.Properties.Settings.get_Default():ST_9a746a1036b7454cbbfeb218d264771c.Properties.Sett" +
    "ings")]

namespace ST_9a746a1036b7454cbbfeb218d264771c.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Net.Mail;
using System.Net;
#endregion

namespace ST_9a746a1036b7454cbbfeb218d264771c
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // TODO: Add your code here
            string sender="mengietestmail@gmail.com";
            string recipant = "meteemeng2@gmail.com";
            string smtp = "smtp.gmail.com";
            string body = "An error occurred while importing XML data.";
            string subject = "Subject";
            //Attachment attach1 = new Attachment("F:\\Youtube\\SSIS\\Part 49 (How to Send mail using script task in SSIS)\\Script2.txt");
            MailMessage msg = new MailMessage(sender, recipant, subject, body);
            SmtpClient smtpclient = new SmtpClient(smtp, 587);
            smtpclient.EnableSsl = true;
            smtpclient.UseDefaultCredentials = false;
            NetworkCredential credentials = new NetworkCredential(sender, "Mengtest0");
            smtpclient.Credentials = credentials;
            //msg.Attachments.Add(attach1);
            smtpclient.Send(msg);

            Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="ST_0a48a16f919843aebe22e25f1edaafb5.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{381cb682-bb18-491c-b5c0-4ff165568f5e}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_9a746a1036b7454cbbfeb218d264771c</RootNamespace><AssemblyName>ST_0a48a16f919843aebe22e25f1edaafb5</AssemblyName><TargetFrameworkVersion>v4.7</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch><TargetFrameworkProfile></TargetFrameworkProfile></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" /><Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host><ProjectClient><HostIdentifier>SSIS_ST160</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_9a746a1036b7454cbbfeb218d264771c</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_9a746a1036b7454cbbfeb218d264771c</msb:DisplayName>
    <msb:ProjectId>{AE6243F4-BB48-41A5-A9B5-B3606F201346}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_0a48a16f919843aebe22e25f1edaafb5.csproj" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_9a746a1036b7454cbbfeb218d264771c")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_9a746a1036b7454cbbfeb218d264771c")]
[assembly: AssemblyCopyright("Copyright @  2023")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_9a746a1036b7454cbbfeb218d264771c.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_9a746a1036b7454cbbfeb218d264771c.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_9a746a1036b7454cbbfeb218d264771c.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_9a746a1036b7454cbbfeb218d264771c.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_9a746a1036b7454cbbfeb218d264771c.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_9a746a1036b7454cbbfeb218d264771c.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDALmF22MAAAAAAAAAAOAAIiALATAAABAAAAAIAAAAAAAA4i4A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAJAuAABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA6A4AAAAgAAAAEAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAASAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADE
LgAAAAAAAEgAAAACAAUALCEAAKwMAAABAAAAAAAAANgtAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwBQBpAAAAAQAAEXIBAABwCnIzAABwC3JdAABwcnsAAHAM
ctMAAHANBgcJCHMQAAAKEwQgSwIAAHMRAAAKJRdvEgAACiUWbxMAAAoGcuMAAHBzFAAAChMFJREF
bxUAAAoRBG8WAAAKAigXAAAKFm8YAAAKKh4CKBkAAAoqHgIoGgAACiqufgEAAAQtHnL3AABw0AMA
AAIoGwAACm8cAAAKcx0AAAqAAQAABH4BAAAEKhp+AgAABCoeAoACAAAEKhp+AwAABCoeAigeAAAK
Ki5zCAAABoADAAAEKgBCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAADIAwAAI34A
ADQEAACABQAAI1N0cmluZ3MAAAAAtAkAAGwBAAAjVVMAIAsAABAAAAAjR1VJRAAAADALAAB8AQAA
I0Jsb2IAAAAAAAAAAgAAAVcdogEJAwAAAPoBMwAWAAABAAAAHwAAAAUAAAAGAAAACQAAAAEAAAAe
AAAAAgAAABAAAAABAAAAAgAAAAMAAAAEAAAAAQAAAAMAAAABAAAAAQAAAAAATQMBAAAAAAAGAO4B
IgQGAH0CIgQGADoBDwQPAJYEAAAGAGcB0AMGANEB0AMGALIB0AMGAGQC0AMGAA4C0AMGACcC0AMG
AH4B0AMGAJkBoQIKAEIC2gIKALkA2gIOAFQAPQMOAAMDLAUGAIoDgwMGAB0BDwQGACUFgwMGAPID
QgQGAOIDuwMOAO0AJwMOAE4BJwMOANUApgMGAAIBIgQOAFIFPQMOAF0FLAUKABUD2gIGAIQAgwMG
AGAAgwMGAHQF0AMAAAAAAQAAAAAAAQABAAEAEACbAxsAOQABAAEAAAAQAEkEpQRNAAEAAwAAARAA
1ASlBGEAAwAHAAMBAAAXBQAARQAEAAoAEQCPA38AEQCpAIMAEQBEAIcABgYKAIsAVoAHBY4AVoCJ
AI4AUCAAAAAAhgChAwYAAQDFIAAAAACGGAIEBgABAM0gAAAAAIMYAgQGAAEA1SAAAAAAkwjuA5IA
AQABIQAAAACTCJEAlwABAAghAAAAAJMInQCcAAEAECEAAAAAlgg3BaIAAgAXIQAAAACGGAIEBgAC
AB8hAAAAAJEYCASnAAIAAAABAJsCCQACBAEAEQACBAYAGQACBAoAKQACBBAAMQACBBAAOQACBBAA
QQACBBAASQACBBAAUQACBBAAWQACBBAAYQACBBAAaQACBAYAkQACBAYAuQACBBUAyQACBAYAeQAC
BCYA0QACBC4A0QB1AzQA0QDtBDQAgQACBDkA0QDdBD8A0QA/AEUAcQAPBUsA4QBDBQEAcQACBAYA
mQACBAYA6QByAFAA6QBwBVcAoQACBFwAwQACBAYACAAUAHUACAAYAHoAKQBzAOIALgALALoALgAT
AMMALgAbAOIALgAjAOsALgArABQBLgAzABQBLgA7ABQBLgBDAOsALgBLABoBLgBTABQBLgBbADEB
QwBjAHoASQBzAOIAYQB7AHoAYwBrAHoAGwADAAEABAADAAAA8gOrAAAAsQCwAAAAOwW1AAIABAAD
AAIABQAFAAEABgAFAAIABwAHAASAAAABAAAA8SCUdQAAAAAAABsAAAAEAAAAAAAAAAAAAABjABIA
AAAAABAAAAAAAAAAAAAAAGwAuwIAAAAABAAAAAAAAAAAAAAAYwCDAwAAAAAAAAAAAQAAAFMEAAAF
AAIAAAAAAAA8TW9kdWxlPgB2YWx1ZV9fAG1zY29ybGliAFNUXzlhNzQ2YTEwMzZiNzQ1NGNiYmZl
YjIxOGQyNjQ3NzFjAFNlbmQAZGVmYXVsdEluc3RhbmNlAE1haWxNZXNzYWdlAFJ1bnRpbWVUeXBl
SGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAFR5cGUARmFpbHVyZQBnZXRfQ3VsdHVyZQBzZXRfQ3Vs
dHVyZQByZXNvdXJjZUN1bHR1cmUAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEFwcGxpY2F0
aW9uU2V0dGluZ3NCYXNlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0
cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBF
ZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRy
YWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1
cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25S
ZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5
cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5
Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQB2YWx1ZQBTeXN0
ZW0uUnVudGltZS5WZXJzaW9uaW5nAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNy
b3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAE5ldHdvcmtDcmVkZW50aWFsAFNj
cmlwdE9iamVjdE1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2RlbABTeXN0ZW0uTmV0Lk1haWwAU1Rf
OWE3NDZhMTAzNmI3NDU0Y2JiZmViMjE4ZDI2NDc3MWMuZGxsAHNldF9FbmFibGVTc2wAU3lzdGVt
AEVudW0AcmVzb3VyY2VNYW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0u
R2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBDdWx0dXJlSW5mbwBnZXRfUmVzb3VyY2VN
YW5hZ2VyAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29t
cGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNUXzlhNzQ2YTEwMzZiNzQ1NGNiYmZlYjIx
OGQyNjQ3NzFjLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBT
VF85YTc0NmExMDM2Yjc0NTRjYmJmZWIyMThkMjY0NzcxYy5Qcm9wZXJ0aWVzAFNldHRpbmdzAHNl
dF9DcmVkZW50aWFscwBzZXRfVXNlRGVmYXVsdENyZWRlbnRpYWxzAFN1Y2Nlc3MAZ2V0X0R0cwBT
Y3JpcHRSZXN1bHRzAE9iamVjdABTeXN0ZW0uTmV0AGdldF9EZWZhdWx0AHNldF9UYXNrUmVzdWx0
AFNtdHBDbGllbnQASUNyZWRlbnRpYWxzQnlIb3N0AGdldF9Bc3NlbWJseQAAAAAAMW0AZQBuAGcA
aQBlAHQAZQBzAHQAbQBhAGkAbABAAGcAbQBhAGkAbAAuAGMAbwBtAAApbQBlAHQAZQBlAG0AZQBu
AGcAMgBAAGcAbQBhAGkAbAAuAGMAbwBtAAAdcwBtAHQAcAAuAGcAbQBhAGkAbAAuAGMAbwBtAABX
QQBuACAAZQByAHIAbwByACAAbwBjAGMAdQByAHIAZQBkACAAdwBoAGkAbABlACAAaQBtAHAAbwBy
AHQAaQBuAGcAIABYAE0ATAAgAGQAYQB0AGEALgAAD1MAdQBiAGoAZQBjAHQAABNNAGUAbgBnAHQA
ZQBzAHQAMAAAcVMAVABfADkAYQA3ADQANgBhADEAMAAzADYAYgA3ADQANQA0AGMAYgBiAGYAZQBi
ADIAMQA4AGQAMgA2ADQANwA3ADEAYwAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUA
cgBjAGUAcwAAAAAALU8O8nVYw0yaQKSmKWpMQAAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQERWQoH
Bg4ODg4SPRJBByAEAQ4ODg4FIAIBDggEIAEBAgUgAgEODgUgAQESbQUgAQESPQQgABJxBgABEnUR
eQQgABJ9BiACAQ4SfQi3elxWGTTgiQiJhF3NgIDMkQQAAAAABAEAAAADBhJRAwYSVQMGEhACBggD
BhEUBAAAElEEAAASVQUAAQESVQQAABIQAwAAAQQIABJRBAgAElUECAASEAgBAAgAAAAAAB4BAAEA
VAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU1RfOWE3NDZhMTAzNmI3NDU0
Y2JiZmViMjE4ZDI2NDc3MWMAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAyMwAASQEAGi5ORVRG
cmFtZXdvcmssVmVyc2lvbj12NC43AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1l
d29yayA0LjcAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVy
LCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRv
a2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQC
AAAAAAAAAAAAAABQQURQQURQtAAAALguAAAAAAAAAAAAANIuAAAAIAAAAAAAAAAAAAAAAAAAAAAA
AAAAAADELgAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQCUdfEgAAABAJR18SA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAA
MAAwADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABh
AG4AeQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4A
AAAAAFMAVABfADkAYQA3ADQANgBhADEAMAAzADYAYgA3ADQANQA0AGMAYgBiAGYAZQBiADIAMQA4
AGQAMgA2ADQANwA3ADEAYwAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAA
LgA4ADQAMwAzAC4AMwAwADEAMAAwAAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAA
AFMAVABfADkAYQA3ADQANgBhADEAMAAzADYAYgA3ADQANQA0AGMAYgBiAGYAZQBiADIAMQA4AGQA
MgA2ADQANwA3ADEAYwAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0
AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMgAzAAAAKgABAAEATABlAGcAYQBsAFQA
cgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBu
AGEAbQBlAAAAUwBUAF8AOQBhADcANAA2AGEAMQAwADMANgBiADcANAA1ADQAYwBiAGIAZgBlAGIA
MgAxADgAZAAyADYANAA3ADcAMQBjAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBt
AGUAAAAAAFMAVABfADkAYQA3ADQANgBhADEAMAAzADYAYgA3ADQANQA0AGMAYgBiAGYAZQBiADIA
MQA4AGQAMgA2ADQANwA3ADEAYwAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAA
ADEALgAwAC4AOAA0ADMAMwAuADMAMAAxADAAMAAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAA
VgBlAHIAcwBpAG8AbgAAADEALgAwAC4AOAA0ADMAMwAuADMAMAAxADAAMAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAADkPgAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\test success"
      DTS:CreationName="Microsoft.FileSystemTask"
      DTS:Description="File System Task"
      DTS:Disabled="True"
      DTS:DTSID="{24ed6ee7-461b-47e8-9172-8d5d962bd92e}"
      DTS:ExecutableType="Microsoft.FileSystemTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="test success"
      DTS:TaskContact="File System Task;Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="4">
      <DTS:Variables />
      <DTS:ObjectData>
        <FileSystemData
          TaskSourcePath="{100868FF-002B-4CB9-B494-B6672E45018A}"
          TaskDestinationPath="{B2330B0D-6428-4199-BD72-3684CF7A367F}" />
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{6ab465c5-5442-4a04-8b9f-a7a47507b69a}"
      DTS:From="Package\If ErrorCounter &gt; 0"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Script Send Mail" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{124ba225-7776-4727-b174-8ce703080950}"
      DTS:From="Package\If ErrorCounter &gt; 0"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\test success" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="136,42"
          Id="Package\Foreach Zip\Delete XML"
          TopLeft="265.571428571429,148.785714285714" />
        <NodeLayout
          Size="145,42"
          Id="Package\Foreach Zip\Error Counter"
          TopLeft="198,388" />
        <NodeLayout
          Size="154,42"
          Id="Package\Foreach Zip\Move failed Zip"
          TopLeft="192,300" />
        <NodeLayout
          Size="165,42"
          Id="Package\Foreach Zip\Move finished Zip"
          TopLeft="15.5,302.928571428572" />
        <NodeLayout
          Size="107,42"
          Id="Package\Foreach Zip\Unzip"
          TopLeft="146.357142857143,19.7857142857143" />
        <EdgeLayout
          Id="Package\Foreach Zip.PrecedenceConstraints[Constraint 4]"
          TopLeft="269.75,342">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,46"
              Start="0,0"
              End="0,38.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,38.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="128,42"
          Id="Package\Foreach Zip\Sequence Container\Import DB"
          TopLeft="35.6558441558441,21.7532467532469" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="205,115"
          Size="205,158"
          Id="Package\Foreach Zip\Sequence Container"
          TopLeft="23.5,96" />
        <EdgeLayout
          Id="Package\Foreach Zip.PrecedenceConstraints[Constraint]"
          TopLeft="199.857142857143,61.7857142857143">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-73.8571428571428,34.2142857142857"
              Start="0,0"
              End="-73.8571428571428,26.7142857142857">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,13.1071428571428" />
                  <mssgle:CubicBezierSegment
                    Point1="0,13.1071428571428"
                    Point2="0,17.1071428571428"
                    Point3="-4,17.1071428571428" />
                  <mssgle:LineSegment
                    End="-69.8571428571428,17.1071428571428" />
                  <mssgle:CubicBezierSegment
                    Point1="-69.8571428571428,17.1071428571428"
                    Point2="-73.8571428571428,17.1071428571428"
                    Point3="-73.8571428571428,21.1071428571428" />
                  <mssgle:LineSegment
                    End="-73.8571428571428,26.7142857142857" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Zip.PrecedenceConstraints[Constraint 1]"
          TopLeft="95.5833333333333,254">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,48.928571428572"
              Start="0,0"
              End="0,41.428571428572">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,41.428571428572" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Zip.PrecedenceConstraints[Constraint 2]"
          TopLeft="158.833333333333,254">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="110.166666666667,46"
              Start="0,0"
              End="110.166666666667,38.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,14.6137463697967" />
                  <mssgle:CubicBezierSegment
                    Point1="0,14.6137463697967"
                    Point2="0,18.6137463697967"
                    Point3="4,18.6137463697967" />
                  <mssgle:LineSegment
                    End="106.166666666667,18.6137463697967" />
                  <mssgle:CubicBezierSegment
                    Point1="106.166666666667,18.6137463697967"
                    Point2="110.166666666667,18.6137463697967"
                    Point3="110.166666666667,22.6137463697967" />
                  <mssgle:LineSegment
                    End="110.166666666667,38.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="39.8419856770833,23.6137463697967,30.4826953125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Zip.PrecedenceConstraints[Constraint 3]"
          TopLeft="228.5,172.392857142857">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="37.071428571429,0"
              Start="0,0"
              End="29.571428571429,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="29.571428571429,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-10.5187388392855,5,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="406,485"
          Size="406,528"
          Id="Package\Foreach Zip"
          TopLeft="407.655844155844,144.214285714286" />
        <NodeLayout
          Size="170,42"
          Id="Package\If ErrorCounter &gt; 0"
          TopLeft="7.81240981241098,321.324675324675" />
        <NodeLayout
          Size="159,42"
          Id="Package\Script Send Mail"
          TopLeft="161.240981240982,225.324675324675" />
        <NodeLayout
          Size="139,42"
          Id="Package\test success"
          TopLeft="149.526695526696,421.753246753247" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="92.812409812411,321.324675324675">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="147.928571428571,-54"
              Start="0,0"
              End="147.928571428571,-46.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-23" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-23"
                    Point2="0,-27"
                    Point3="4,-27" />
                  <mssgle:LineSegment
                    End="143.928571428571,-27" />
                  <mssgle:CubicBezierSegment
                    Point1="143.928571428571,-27"
                    Point2="147.928571428571,-27"
                    Point3="147.928571428571,-31" />
                  <mssgle:LineSegment
                    End="147.928571428571,-46.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="92.812409812411,363.324675324675">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="126.214285714286,58.4285714285714"
              Start="0,0"
              End="126.214285714286,50.9285714285714">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.2142857142857" />
                  <mssgle:CubicBezierSegment
                    Point1="0,25.2142857142857"
                    Point2="0,29.2142857142857"
                    Point3="4,29.2142857142857" />
                  <mssgle:LineSegment
                    End="122.214285714286,29.2142857142857" />
                  <mssgle:CubicBezierSegment
                    Point1="122.214285714286,29.2142857142857"
                    Point2="126.214285714286,29.2142857142857"
                    Point3="126.214285714286,33.2142857142857" />
                  <mssgle:LineSegment
                    End="126.214285714286,50.9285714285714" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Foreach Zip\Sequence Container\Import DB">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="139,42"
          Id="Package\Foreach Zip\Sequence Container\Import DB\XML Source"
          TopLeft="346,80" />
        <NodeLayout
          Size="168,42"
          Id="Package\Foreach Zip\Sequence Container\Import DB\Conditional Split 1"
          TopLeft="186,182" />
        <NodeLayout
          Size="204,42"
          Id="Package\Foreach Zip\Sequence Container\Import DB\ST_Scard_Detail_dayend"
          TopLeft="467,449" />
        <NodeLayout
          Size="188,42"
          Id="Package\Foreach Zip\Sequence Container\Import DB\ST_ArHeader_dayend"
          TopLeft="171,453" />
        <NodeLayout
          Size="115,42"
          Id="Package\Foreach Zip\Sequence Container\Import DB\Lookup"
          TopLeft="209,328" />
        <NodeLayout
          Size="124,42"
          Id="Package\Foreach Zip\Sequence Container\Import DB\Lookup 1"
          TopLeft="508,326" />
        <NodeLayout
          Size="159,42"
          Id="Package\Foreach Zip\Sequence Container\Import DB\Conditional Split"
          TopLeft="487,178" />
        <EdgeLayout
          Id="Package\Foreach Zip\Sequence Container\Import DB.Paths[ST_Scard_Detail]"
          TopLeft="415.5,122">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="151,56"
              Start="0,0"
              End="151,48.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,24" />
                  <mssgle:CubicBezierSegment
                    Point1="0,24"
                    Point2="0,28"
                    Point3="4,28" />
                  <mssgle:LineSegment
                    End="147,28" />
                  <mssgle:CubicBezierSegment
                    Point1="147,28"
                    Point2="151,28"
                    Point3="151,32" />
                  <mssgle:LineSegment
                    End="151,48.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="38.98220703125,33,73.0355859375,11.0625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Zip\Sequence Container\Import DB.Paths[ST_ArHeader]"
          TopLeft="393.666666666667,122">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-123.666666666667,60"
              Start="0,0"
              End="-123.666666666667,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.4096728307255" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.4096728307255"
                    Point2="0,24.4096728307255"
                    Point3="-4,24.4096728307255" />
                  <mssgle:LineSegment
                    End="-119.666666666667,24.4096728307255" />
                  <mssgle:CubicBezierSegment
                    Point1="-119.666666666667,24.4096728307255"
                    Point2="-123.666666666667,24.4096728307255"
                    Point3="-123.666666666667,28.4096728307255" />
                  <mssgle:LineSegment
                    End="-123.666666666667,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-91.6826888020835,29.4096728307255,59.6987109375,11.0625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Zip\Sequence Container\Import DB.Paths[Lookup No Match Output1]"
          TopLeft="569.5,368">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,81"
              Start="0,0"
              End="0,73.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,73.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-55.80638671875,30.9453125,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Zip\Sequence Container\Import DB.Paths[Lookup No Match Output]"
          TopLeft="265.75,370">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,83"
              Start="0,0"
              End="0,75.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,75.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-55.80638671875,31.9453125,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Zip\Sequence Container\Import DB.Paths[filter10-TIRES]"
          TopLeft="568.25,220">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,106"
              Start="0,0"
              End="0,98.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,98.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-31.54033203125,44.35107421875,63.0806640625,9.7978515625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Zip\Sequence Container\Import DB.Paths[Conditional Split Default Output]"
          TopLeft="268.25,224">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,104"
              Start="0,0"
              End="0,96.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,96.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>